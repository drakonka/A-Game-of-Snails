/*! Built with IMPACT - impactjs.com */

(function(window){"use strict";Number.prototype.map=function(istart,istop,ostart,ostop){return ostart+(ostop-ostart)*((this-istart)/(istop-istart));};Number.prototype.limit=function(min,max){return Math.min(max,Math.max(min,this));};Number.prototype.round=function(precision){precision=Math.pow(10,precision||0);return Math.round(this*precision)/precision;};Number.prototype.floor=function(){return Math.floor(this);};Number.prototype.ceil=function(){return Math.ceil(this);};Number.prototype.toInt=function(){return(this|0);};Number.prototype.toRad=function(){return(this/180)*Math.PI;};Number.prototype.toDeg=function(){return(this*180)/Math.PI;};Array.prototype.erase=function(item){for(var i=this.length;i--;){if(this[i]===item){this.splice(i,1);}}
return this;};Array.prototype.random=function(){return this[Math.floor(Math.random()*this.length)];};Function.prototype.bind=Function.prototype.bind||function(oThis){if(typeof this!=="function"){throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");}
var aArgs=Array.prototype.slice.call(arguments,1),fToBind=this,fNOP=function(){},fBound=function(){return fToBind.apply((this instanceof fNOP&&oThis?this:oThis),aArgs.concat(Array.prototype.slice.call(arguments)));};fNOP.prototype=this.prototype;fBound.prototype=new fNOP();return fBound;};window.ig={game:null,debug:null,version:'1.22',global:window,modules:{},resources:[],ready:false,baked:false,nocache:'',ua:{},prefix:(window.ImpactPrefix||''),lib:'lib/',_current:null,_loadQueue:[],_waitForOnload:0,$:function(selector){return selector.charAt(0)=='#'?document.getElementById(selector.substr(1)):document.getElementsByTagName(selector);},$new:function(name){return document.createElement(name);},copy:function(object){if(!object||typeof(object)!='object'||object instanceof HTMLElement||object instanceof ig.Class){return object;}
else if(object instanceof Array){var c=[];for(var i=0,l=object.length;i<l;i++){c[i]=ig.copy(object[i]);}
return c;}
else{var c={};for(var i in object){c[i]=ig.copy(object[i]);}
return c;}},merge:function(original,extended){for(var key in extended){var ext=extended[key];if(typeof(ext)!='object'||ext instanceof HTMLElement||ext instanceof ig.Class){original[key]=ext;}
else{if(!original[key]||typeof(original[key])!='object'){original[key]=(ext instanceof Array)?[]:{};}
ig.merge(original[key],ext);}}
return original;},ksort:function(obj){if(!obj||typeof(obj)!='object'){return[];}
var keys=[],values=[];for(var i in obj){keys.push(i);}
keys.sort();for(var i=0;i<keys.length;i++){values.push(obj[keys[i]]);}
return values;},setVendorAttribute:function(el,attr,val){var uc=attr.charAt(0).toUpperCase()+attr.substr(1);el[attr]=el['ms'+uc]=el['moz'+uc]=el['webkit'+uc]=el['o'+uc]=val;},getVendorAttribute:function(el,attr){var uc=attr.charAt(0).toUpperCase()+attr.substr(1);return el[attr]||el['ms'+uc]||el['moz'+uc]||el['webkit'+uc]||el['o'+uc];},normalizeVendorAttribute:function(el,attr){var prefixedVal=ig.getVendorAttribute(el,attr);if(!el[attr]&&prefixedVal){el[attr]=prefixedVal;}},getImagePixels:function(image,x,y,width,height){var canvas=ig.$new('canvas');canvas.width=image.width;canvas.height=image.height;var ctx=canvas.getContext('2d');ig.System.SCALE.CRISP(canvas,ctx);var ratio=ig.getVendorAttribute(ctx,'backingStorePixelRatio')||1;ig.normalizeVendorAttribute(ctx,'getImageDataHD');var realWidth=image.width/ratio,realHeight=image.height/ratio;canvas.width=Math.ceil(realWidth);canvas.height=Math.ceil(realHeight);ctx.drawImage(image,0,0,realWidth,realHeight);return(ratio===1)?ctx.getImageData(x,y,width,height):ctx.getImageDataHD(x,y,width,height);},module:function(name){if(ig._current){throw("Module '"+ig._current.name+"' defines nothing");}
if(ig.modules[name]&&ig.modules[name].body){throw("Module '"+name+"' is already defined");}
ig._current={name:name,requires:[],loaded:false,body:null};ig.modules[name]=ig._current;ig._loadQueue.push(ig._current);return ig;},requires:function(){ig._current.requires=Array.prototype.slice.call(arguments);return ig;},defines:function(body){ig._current.body=body;ig._current=null;ig._initDOMReady();},addResource:function(resource){ig.resources.push(resource);},setNocache:function(set){ig.nocache=set?'?'+Date.now():'';},log:function(){},assert:function(condition,msg){},show:function(name,number){},mark:function(msg,color){},_loadScript:function(name,requiredFrom){ig.modules[name]={name:name,requires:[],loaded:false,body:null};ig._waitForOnload++;var path=ig.prefix+ig.lib+name.replace(/\./g,'/')+'.js'+ig.nocache;var script=ig.$new('script');script.type='text/javascript';script.src=path;script.onload=function(){ig._waitForOnload--;ig._execModules();};script.onerror=function(){throw('Failed to load module '+name+' at '+path+' '+'required from '+requiredFrom);};ig.$('head')[0].appendChild(script);},_execModules:function(){var modulesLoaded=false;for(var i=0;i<ig._loadQueue.length;i++){var m=ig._loadQueue[i];var dependenciesLoaded=true;for(var j=0;j<m.requires.length;j++){var name=m.requires[j];if(!ig.modules[name]){dependenciesLoaded=false;ig._loadScript(name,m.name);}
else if(!ig.modules[name].loaded){dependenciesLoaded=false;}}
if(dependenciesLoaded&&m.body){ig._loadQueue.splice(i,1);m.loaded=true;m.body();modulesLoaded=true;i--;}}
if(modulesLoaded){ig._execModules();}
else if(!ig.baked&&ig._waitForOnload==0&&ig._loadQueue.length!=0){var unresolved=[];for(var i=0;i<ig._loadQueue.length;i++){var unloaded=[];var requires=ig._loadQueue[i].requires;for(var j=0;j<requires.length;j++){var m=ig.modules[requires[j]];if(!m||!m.loaded){unloaded.push(requires[j]);}}
unresolved.push(ig._loadQueue[i].name+' (requires: '+unloaded.join(', ')+')');}
throw('Unresolved (circular?) dependencies. '+"Most likely there's a name/path mismatch for one of the listed modules:\n"+
unresolved.join('\n'));}},_DOMReady:function(){if(!ig.modules['dom.ready'].loaded){if(!document.body){return setTimeout(ig._DOMReady,13);}
ig.modules['dom.ready'].loaded=true;ig._waitForOnload--;ig._execModules();}
return 0;},_boot:function(){if(document.location.href.match(/\?nocache/)){ig.setNocache(true);}
ig.ua.pixelRatio=window.devicePixelRatio||1;ig.ua.viewport={width:window.innerWidth,height:window.innerHeight};ig.ua.screen={width:window.screen.availWidth*ig.ua.pixelRatio,height:window.screen.availHeight*ig.ua.pixelRatio};ig.ua.iPhone=/iPhone/i.test(navigator.userAgent);ig.ua.iPhone4=(ig.ua.iPhone&&ig.ua.pixelRatio==2);ig.ua.iPad=/iPad/i.test(navigator.userAgent);ig.ua.android=/android/i.test(navigator.userAgent);ig.ua.winPhone=/Windows Phone/i.test(navigator.userAgent);ig.ua.iOS=ig.ua.iPhone||ig.ua.iPad;ig.ua.mobile=ig.ua.iOS||ig.ua.android||ig.ua.winPhone;ig.ua.touchDevice=(('ontouchstart'in window)||(window.navigator.msMaxTouchPoints));},_initDOMReady:function(){if(ig.modules['dom.ready']){ig._execModules();return;}
ig._boot();ig.modules['dom.ready']={requires:[],loaded:false,body:null};ig._waitForOnload++;if(document.readyState==='complete'){ig._DOMReady();}
else{document.addEventListener('DOMContentLoaded',ig._DOMReady,false);window.addEventListener('load',ig._DOMReady,false);}}};ig.normalizeVendorAttribute(window,'requestAnimationFrame');if(window.requestAnimationFrame){var next=1,anims={};window.ig.setAnimation=function(callback,element){var current=next++;anims[current]=true;var animate=function(){if(!anims[current]){return;}
window.requestAnimationFrame(animate,element);callback();};window.requestAnimationFrame(animate,element);return current;};window.ig.clearAnimation=function(id){delete anims[id];};}
else{window.ig.setAnimation=function(callback,element){return window.setInterval(callback,1000/60);};window.ig.clearAnimation=function(id){window.clearInterval(id);};}
var initializing=false,fnTest=/xyz/.test(function(){xyz;})?/\bparent\b/:/.*/;window.ig.Class=function(){};var inject=function(prop){var proto=this.prototype;var parent={};for(var name in prop){if(typeof(prop[name])=="function"&&typeof(proto[name])=="function"&&fnTest.test(prop[name])){parent[name]=proto[name];proto[name]=(function(name,fn){return function(){var tmp=this.parent;this.parent=parent[name];var ret=fn.apply(this,arguments);this.parent=tmp;return ret;};})(name,prop[name]);}
else{proto[name]=prop[name];}}};window.ig.Class.extend=function(prop){var parent=this.prototype;initializing=true;var prototype=new this();initializing=false;for(var name in prop){if(typeof(prop[name])=="function"&&typeof(parent[name])=="function"&&fnTest.test(prop[name])){prototype[name]=(function(name,fn){return function(){var tmp=this.parent;this.parent=parent[name];var ret=fn.apply(this,arguments);this.parent=tmp;return ret;};})(name,prop[name]);}
else{prototype[name]=prop[name];}}
function Class(){if(!initializing){if(this.staticInstantiate){var obj=this.staticInstantiate.apply(this,arguments);if(obj){return obj;}}
for(var p in this){if(typeof(this[p])=='object'){this[p]=ig.copy(this[p]);}}
if(this.init){this.init.apply(this,arguments);}}
return this;}
Class.prototype=prototype;Class.prototype.constructor=Class;Class.extend=window.ig.Class.extend;Class.inject=inject;return Class;};if(window.ImpactMixin){ig.merge(ig,window.ImpactMixin);}})(window);

// lib/impact/image.js
ig.baked=true;ig.module('impact.image').defines(function(){"use strict";ig.Image=ig.Class.extend({data:null,width:0,height:0,loaded:false,failed:false,loadCallback:null,path:'',staticInstantiate:function(path){return ig.Image.cache[path]||null;},init:function(path){this.path=path;this.load();},load:function(loadCallback){if(this.loaded){if(loadCallback){loadCallback(this.path,true);}
return;}
else if(!this.loaded&&ig.ready){this.loadCallback=loadCallback||null;this.data=new Image();this.data.onload=this.onload.bind(this);this.data.onerror=this.onerror.bind(this);this.data.src=ig.prefix+this.path+ig.nocache;}
else{ig.addResource(this);}
ig.Image.cache[this.path]=this;},reload:function(){this.loaded=false;this.data=new Image();this.data.onload=this.onload.bind(this);this.data.src=this.path+'?'+Date.now();},onload:function(event){this.width=this.data.width;this.height=this.data.height;this.loaded=true;if(ig.system.scale!=1){this.resize(ig.system.scale);}
if(this.loadCallback){this.loadCallback(this.path,true);}},onerror:function(event){this.failed=true;if(this.loadCallback){this.loadCallback(this.path,false);}},resize:function(scale){var origPixels=ig.getImagePixels(this.data,0,0,this.width,this.height);var widthScaled=this.width*scale;var heightScaled=this.height*scale;var scaled=ig.$new('canvas');scaled.width=widthScaled;scaled.height=heightScaled;var scaledCtx=scaled.getContext('2d');var scaledPixels=scaledCtx.getImageData(0,0,widthScaled,heightScaled);for(var y=0;y<heightScaled;y++){for(var x=0;x<widthScaled;x++){var index=(Math.floor(y/scale)*this.width+Math.floor(x/scale))*4;var indexScaled=(y*widthScaled+x)*4;scaledPixels.data[indexScaled]=origPixels.data[index];scaledPixels.data[indexScaled+1]=origPixels.data[index+1];scaledPixels.data[indexScaled+2]=origPixels.data[index+2];scaledPixels.data[indexScaled+3]=origPixels.data[index+3];}}
scaledCtx.putImageData(scaledPixels,0,0);this.data=scaled;},draw:function(targetX,targetY,sourceX,sourceY,width,height){if(!this.loaded){return;}
var scale=ig.system.scale;sourceX=sourceX?sourceX*scale:0;sourceY=sourceY?sourceY*scale:0;width=(width?width:this.width)*scale;height=(height?height:this.height)*scale;ig.system.context.drawImage(this.data,sourceX,sourceY,width,height,ig.system.getDrawPos(targetX),ig.system.getDrawPos(targetY),width,height);ig.Image.drawCount++;},drawTile:function(targetX,targetY,tile,tileWidth,tileHeight,flipX,flipY){tileHeight=tileHeight?tileHeight:tileWidth;if(!this.loaded||tileWidth>this.width||tileHeight>this.height){return;}
var scale=ig.system.scale;var tileWidthScaled=Math.floor(tileWidth*scale);var tileHeightScaled=Math.floor(tileHeight*scale);var scaleX=flipX?-1:1;var scaleY=flipY?-1:1;if(flipX||flipY){ig.system.context.save();ig.system.context.scale(scaleX,scaleY);}
ig.system.context.drawImage(this.data,(Math.floor(tile*tileWidth)%this.width)*scale,(Math.floor(tile*tileWidth/this.width)*tileHeight)*scale,tileWidthScaled,tileHeightScaled,ig.system.getDrawPos(targetX)*scaleX-(flipX?tileWidthScaled:0),ig.system.getDrawPos(targetY)*scaleY-(flipY?tileHeightScaled:0),tileWidthScaled,tileHeightScaled);if(flipX||flipY){ig.system.context.restore();}
ig.Image.drawCount++;}});ig.Image.drawCount=0;ig.Image.cache={};ig.Image.reloadCache=function(){for(var path in ig.Image.cache){ig.Image.cache[path].reload();}};});

// lib/impact/font.js
ig.baked=true;ig.module('impact.font').requires('impact.image').defines(function(){"use strict";ig.Font=ig.Image.extend({widthMap:[],indices:[],firstChar:32,alpha:1,letterSpacing:1,lineSpacing:0,onload:function(ev){this._loadMetrics(this.data);this.parent(ev);},widthForString:function(text){if(text.indexOf('\n')!==-1){var lines=text.split('\n');var width=0;for(var i=0;i<lines.length;i++){width=Math.max(width,this._widthForLine(lines[i]));}
return width;}
else{return this._widthForLine(text);}},_widthForLine:function(text){var width=0;for(var i=0;i<text.length;i++){width+=this.widthMap[text.charCodeAt(i)-this.firstChar]+this.letterSpacing;}
return width;},heightForString:function(text){return text.split('\n').length*(this.height+this.lineSpacing);},draw:function(text,x,y,align){if(typeof(text)!='string'){text=text.toString();}
if(text.indexOf('\n')!==-1){var lines=text.split('\n');var lineHeight=this.height+this.lineSpacing;for(var i=0;i<lines.length;i++){this.draw(lines[i],x,y+i*lineHeight,align);}
return;}
if(align==ig.Font.ALIGN.RIGHT||align==ig.Font.ALIGN.CENTER){var width=this._widthForLine(text);x-=align==ig.Font.ALIGN.CENTER?width/2:width;}
if(this.alpha!==1){ig.system.context.globalAlpha=this.alpha;}
for(var i=0;i<text.length;i++){var c=text.charCodeAt(i);x+=this._drawChar(c-this.firstChar,x,y);}
if(this.alpha!==1){ig.system.context.globalAlpha=1;}
ig.Image.drawCount+=text.length;},_drawChar:function(c,targetX,targetY){if(!this.loaded||c<0||c>=this.indices.length){return 0;}
var scale=ig.system.scale;var charX=this.indices[c]*scale;var charY=0;var charWidth=this.widthMap[c]*scale;var charHeight=(this.height-2)*scale;ig.system.context.drawImage(this.data,charX,charY,charWidth,charHeight,ig.system.getDrawPos(targetX),ig.system.getDrawPos(targetY),charWidth,charHeight);return this.widthMap[c]+this.letterSpacing;},_loadMetrics:function(image){this.height=image.height-1;this.widthMap=[];this.indices=[];var px=ig.getImagePixels(image,0,image.height-1,image.width,1);var currentChar=0;var currentWidth=0;for(var x=0;x<image.width;x++){var index=x*4+3;if(px.data[index]>127){currentWidth++;}
else if(px.data[index]<128&&currentWidth){this.widthMap.push(currentWidth);this.indices.push(x-currentWidth);currentChar++;currentWidth=0;}}
this.widthMap.push(currentWidth);this.indices.push(x-currentWidth);}});ig.Font.ALIGN={LEFT:0,RIGHT:1,CENTER:2};});

// lib/impact/sound.js
ig.baked=true;ig.module('impact.sound').defines(function(){"use strict";ig.SoundManager=ig.Class.extend({clips:{},volume:1,format:null,init:function(){if(!ig.Sound.enabled||!window.Audio){ig.Sound.enabled=false;return;}
var probe=new Audio();for(var i=0;i<ig.Sound.use.length;i++){var format=ig.Sound.use[i];if(probe.canPlayType(format.mime)){this.format=format;break;}}
if(!this.format){ig.Sound.enabled=false;}},load:function(path,multiChannel,loadCallback){var realPath=ig.prefix+path.replace(/[^\.]+$/,this.format.ext)+ig.nocache;if(this.clips[path]){if(multiChannel&&this.clips[path].length<ig.Sound.channels){for(var i=this.clips[path].length;i<ig.Sound.channels;i++){var a=new Audio(realPath);a.load();this.clips[path].push(a);}}
return this.clips[path][0];}
var clip=new Audio(realPath);if(loadCallback){clip.addEventListener('canplaythrough',function cb(ev){clip.removeEventListener('canplaythrough',cb,false);loadCallback(path,true,ev);},false);clip.addEventListener('error',function(ev){loadCallback(path,false,ev);},false);}
clip.preload='auto';clip.load();this.clips[path]=[clip];if(multiChannel){for(var i=1;i<ig.Sound.channels;i++){var a=new Audio(realPath);a.load();this.clips[path].push(a);}}
return clip;},get:function(path){var channels=this.clips[path];for(var i=0,clip;clip=channels[i++];){if(clip.paused||clip.ended){if(clip.ended){clip.currentTime=0;}
return clip;}}
channels[0].pause();channels[0].currentTime=0;return channels[0];}});ig.Music=ig.Class.extend({tracks:[],namedTracks:{},currentTrack:null,currentIndex:0,random:false,_volume:1,_loop:false,_fadeInterval:0,_fadeTimer:null,_endedCallbackBound:null,init:function(){this._endedCallbackBound=this._endedCallback.bind(this);if(Object.defineProperty){Object.defineProperty(this,"volume",{get:this.getVolume.bind(this),set:this.setVolume.bind(this)});Object.defineProperty(this,"loop",{get:this.getLooping.bind(this),set:this.setLooping.bind(this)});}
else if(this.__defineGetter__){this.__defineGetter__('volume',this.getVolume.bind(this));this.__defineSetter__('volume',this.setVolume.bind(this));this.__defineGetter__('loop',this.getLooping.bind(this));this.__defineSetter__('loop',this.setLooping.bind(this));}},add:function(music,name){if(!ig.Sound.enabled){return;}
var path=music instanceof ig.Sound?music.path:music;var track=ig.soundManager.load(path,false);track.loop=this._loop;track.volume=this._volume;track.addEventListener('ended',this._endedCallbackBound,false);this.tracks.push(track);if(name){this.namedTracks[name]=track;}
if(!this.currentTrack){this.currentTrack=track;}},next:function(){if(!this.tracks.length){return;}
this.stop();this.currentIndex=this.random?Math.floor(Math.random()*this.tracks.length):(this.currentIndex+1)%this.tracks.length;this.currentTrack=this.tracks[this.currentIndex];this.play();},pause:function(){if(!this.currentTrack){return;}
this.currentTrack.pause();},stop:function(){if(!this.currentTrack){return;}
this.currentTrack.pause();this.currentTrack.currentTime=0;},play:function(name){if(name&&this.namedTracks[name]){var newTrack=this.namedTracks[name];if(newTrack!=this.currentTrack){this.stop();this.currentTrack=newTrack;}}
else if(!this.currentTrack){return;}
this.currentTrack.play();},getLooping:function(){return this._loop;},setLooping:function(l){this._loop=l;for(var i in this.tracks){this.tracks[i].loop=l;}},getVolume:function(){return this._volume;},setVolume:function(v){this._volume=v.limit(0,1);for(var i in this.tracks){this.tracks[i].volume=this._volume;}},fadeOut:function(time){if(!this.currentTrack){return;}
clearInterval(this._fadeInterval);this.fadeTimer=new ig.Timer(time);this._fadeInterval=setInterval(this._fadeStep.bind(this),50);},_fadeStep:function(){var v=this.fadeTimer.delta().map(-this.fadeTimer.target,0,1,0).limit(0,1)*this._volume;if(v<=0.01){this.stop();this.currentTrack.volume=this._volume;clearInterval(this._fadeInterval);}
else{this.currentTrack.volume=v;}},_endedCallback:function(){if(this._loop){this.play();}
else{this.next();}}});ig.Sound=ig.Class.extend({path:'',volume:1,currentClip:null,multiChannel:true,init:function(path,multiChannel){this.path=path;this.multiChannel=(multiChannel!==false);this.load();},load:function(loadCallback){if(!ig.Sound.enabled){if(loadCallback){loadCallback(this.path,true);}
return;}
if(ig.ready){ig.soundManager.load(this.path,this.multiChannel,loadCallback);}
else{ig.addResource(this);}},play:function(){if(!ig.Sound.enabled){return;}
this.currentClip=ig.soundManager.get(this.path);this.currentClip.volume=ig.soundManager.volume*this.volume;this.currentClip.play();},stop:function(){if(this.currentClip){this.currentClip.pause();this.currentClip.currentTime=0;}}});ig.Sound.FORMAT={MP3:{ext:'mp3',mime:'audio/mpeg'},M4A:{ext:'m4a',mime:'audio/mp4; codecs=mp4a'},OGG:{ext:'ogg',mime:'audio/ogg; codecs=vorbis'},WEBM:{ext:'webm',mime:'audio/webm; codecs=vorbis'},CAF:{ext:'caf',mime:'audio/x-caf'}};ig.Sound.use=[ig.Sound.FORMAT.OGG,ig.Sound.FORMAT.MP3];ig.Sound.channels=4;ig.Sound.enabled=true;});

// lib/impact/loader.js
ig.baked=true;ig.module('impact.loader').requires('impact.image','impact.font','impact.sound').defines(function(){"use strict";ig.Loader=ig.Class.extend({resources:[],gameClass:null,status:0,done:false,_unloaded:[],_drawStatus:0,_intervalId:0,_loadCallbackBound:null,init:function(gameClass,resources){this.gameClass=gameClass;this.resources=resources;this._loadCallbackBound=this._loadCallback.bind(this);for(var i=0;i<this.resources.length;i++){this._unloaded.push(this.resources[i].path);}},load:function(){ig.system.clear('#000');if(!this.resources.length){this.end();return;}
for(var i=0;i<this.resources.length;i++){this.loadResource(this.resources[i]);}
this._intervalId=setInterval(this.draw.bind(this),16);},loadResource:function(res){res.load(this._loadCallbackBound);},end:function(){if(this.done){return;}
this.done=true;clearInterval(this._intervalId);ig.system.setGame(this.gameClass);},draw:function(){this._drawStatus+=(this.status-this._drawStatus)/5;var s=ig.system.scale;var w=ig.system.width*0.6;var h=ig.system.height*0.1;var x=ig.system.width*0.5-w/2;var y=ig.system.height*0.5-h/2;ig.system.context.fillStyle='#000';ig.system.context.fillRect(0,0,480,320);ig.system.context.fillStyle='#fff';ig.system.context.fillRect(x*s,y*s,w*s,h*s);ig.system.context.fillStyle='#000';ig.system.context.fillRect(x*s+s,y*s+s,w*s-s-s,h*s-s-s);ig.system.context.fillStyle='#fff';ig.system.context.fillRect(x*s,y*s,w*s*this._drawStatus,h*s);},_loadCallback:function(path,status){if(status){this._unloaded.erase(path);}
else{throw('Failed to load resource: '+path);}
this.status=1-(this._unloaded.length/this.resources.length);if(this._unloaded.length==0){setTimeout(this.end.bind(this),250);}}});});

// lib/impact/timer.js
ig.baked=true;ig.module('impact.timer').defines(function(){"use strict";ig.Timer=ig.Class.extend({target:0,base:0,last:0,pausedAt:0,init:function(seconds){this.base=ig.Timer.time;this.last=ig.Timer.time;this.target=seconds||0;},set:function(seconds){this.target=seconds||0;this.base=ig.Timer.time;this.pausedAt=0;},reset:function(){this.base=ig.Timer.time;this.pausedAt=0;},tick:function(){var delta=ig.Timer.time-this.last;this.last=ig.Timer.time;return(this.pausedAt?0:delta);},delta:function(){return(this.pausedAt||ig.Timer.time)-this.base-this.target;},pause:function(){if(!this.pausedAt){this.pausedAt=ig.Timer.time;}},unpause:function(){if(this.pausedAt){this.base+=ig.Timer.time-this.pausedAt;this.pausedAt=0;}}});ig.Timer._last=0;ig.Timer.time=Number.MIN_VALUE;ig.Timer.timeScale=1;ig.Timer.maxStep=0.05;ig.Timer.step=function(){var current=Date.now();var delta=(current-ig.Timer._last)/1000;ig.Timer.time+=Math.min(delta,ig.Timer.maxStep)*ig.Timer.timeScale;ig.Timer._last=current;};});

// lib/impact/system.js
ig.baked=true;ig.module('impact.system').requires('impact.timer','impact.image').defines(function(){"use strict";ig.System=ig.Class.extend({fps:30,width:320,height:240,realWidth:320,realHeight:240,scale:1,tick:0,animationId:0,newGameClass:null,running:false,delegate:null,clock:null,canvas:null,context:null,init:function(canvasId,fps,width,height,scale){this.fps=fps;this.clock=new ig.Timer();this.canvas=ig.$(canvasId);this.resize(width,height,scale);this.context=this.canvas.getContext('2d');this.getDrawPos=ig.System.drawMode;if(this.scale!=1){ig.System.scaleMode=ig.System.SCALE.CRISP;}
ig.System.scaleMode(this.canvas,this.context);},resize:function(width,height,scale){this.width=width;this.height=height;this.scale=scale||this.scale;this.realWidth=this.width*this.scale;this.realHeight=this.height*this.scale;this.canvas.width=this.realWidth;this.canvas.height=this.realHeight;},setGame:function(gameClass){if(this.running){this.newGameClass=gameClass;}
else{this.setGameNow(gameClass);}},setGameNow:function(gameClass){ig.game=new(gameClass)();ig.system.setDelegate(ig.game);},setDelegate:function(object){if(typeof(object.run)=='function'){this.delegate=object;this.startRunLoop();}else{throw('System.setDelegate: No run() function in object');}},stopRunLoop:function(){ig.clearAnimation(this.animationId);this.running=false;},startRunLoop:function(){this.stopRunLoop();this.animationId=ig.setAnimation(this.run.bind(this),this.canvas);this.running=true;},clear:function(color){this.context.fillStyle=color;this.context.fillRect(0,0,this.realWidth,this.realHeight);},run:function(){ig.Timer.step();this.tick=this.clock.tick();this.delegate.run();ig.input.clearPressed();if(this.newGameClass){this.setGameNow(this.newGameClass);this.newGameClass=null;}},getDrawPos:null});ig.System.DRAW={AUTHENTIC:function(p){return Math.round(p)*this.scale;},SMOOTH:function(p){return Math.round(p*this.scale);},SUBPIXEL:function(p){return p*this.scale;}};ig.System.drawMode=ig.System.DRAW.SMOOTH;ig.System.SCALE={CRISP:function(canvas,context){ig.setVendorAttribute(context,'imageSmoothingEnabled',false);canvas.style.imageRendering='-moz-crisp-edges';canvas.style.imageRendering='-o-crisp-edges';canvas.style.imageRendering='-webkit-optimize-contrast';canvas.style.imageRendering='crisp-edges';canvas.style.msInterpolationMode='nearest-neighbor';},SMOOTH:function(canvas,context){ig.setVendorAttribute(context,'imageSmoothingEnabled',true);canvas.style.imageRendering='';canvas.style.msInterpolationMode='';}};ig.System.scaleMode=ig.System.SCALE.SMOOTH;});

// lib/impact/input.js
ig.baked=true;ig.module('impact.input').defines(function(){"use strict";ig.KEY={'MOUSE1':-1,'MOUSE2':-3,'MWHEEL_UP':-4,'MWHEEL_DOWN':-5,'BACKSPACE':8,'TAB':9,'ENTER':13,'PAUSE':19,'CAPS':20,'ESC':27,'SPACE':32,'PAGE_UP':33,'PAGE_DOWN':34,'END':35,'HOME':36,'LEFT_ARROW':37,'UP_ARROW':38,'RIGHT_ARROW':39,'DOWN_ARROW':40,'INSERT':45,'DELETE':46,'_0':48,'_1':49,'_2':50,'_3':51,'_4':52,'_5':53,'_6':54,'_7':55,'_8':56,'_9':57,'A':65,'B':66,'C':67,'D':68,'E':69,'F':70,'G':71,'H':72,'I':73,'J':74,'K':75,'L':76,'M':77,'N':78,'O':79,'P':80,'Q':81,'R':82,'S':83,'T':84,'U':85,'V':86,'W':87,'X':88,'Y':89,'Z':90,'NUMPAD_0':96,'NUMPAD_1':97,'NUMPAD_2':98,'NUMPAD_3':99,'NUMPAD_4':100,'NUMPAD_5':101,'NUMPAD_6':102,'NUMPAD_7':103,'NUMPAD_8':104,'NUMPAD_9':105,'MULTIPLY':106,'ADD':107,'SUBSTRACT':109,'DECIMAL':110,'DIVIDE':111,'F1':112,'F2':113,'F3':114,'F4':115,'F5':116,'F6':117,'F7':118,'F8':119,'F9':120,'F10':121,'F11':122,'F12':123,'SHIFT':16,'CTRL':17,'ALT':18,'PLUS':187,'COMMA':188,'MINUS':189,'PERIOD':190};ig.Input=ig.Class.extend({bindings:{},actions:{},presses:{},locks:{},delayedKeyup:{},isUsingMouse:false,isUsingKeyboard:false,isUsingAccelerometer:false,mouse:{x:0,y:0},accel:{x:0,y:0,z:0},initMouse:function(){if(this.isUsingMouse){return;}
this.isUsingMouse=true;var mouseWheelBound=this.mousewheel.bind(this);ig.system.canvas.addEventListener('mousewheel',mouseWheelBound,false);ig.system.canvas.addEventListener('DOMMouseScroll',mouseWheelBound,false);ig.system.canvas.addEventListener('contextmenu',this.contextmenu.bind(this),false);ig.system.canvas.addEventListener('mousedown',this.keydown.bind(this),false);ig.system.canvas.addEventListener('mouseup',this.keyup.bind(this),false);ig.system.canvas.addEventListener('mousemove',this.mousemove.bind(this),false);if(ig.ua.touchDevice){ig.system.canvas.addEventListener('touchstart',this.keydown.bind(this),false);ig.system.canvas.addEventListener('touchend',this.keyup.bind(this),false);ig.system.canvas.addEventListener('touchmove',this.mousemove.bind(this),false);ig.system.canvas.addEventListener('MSPointerDown',this.keydown.bind(this),false);ig.system.canvas.addEventListener('MSPointerUp',this.keyup.bind(this),false);ig.system.canvas.addEventListener('MSPointerMove',this.mousemove.bind(this),false);ig.system.canvas.style.msTouchAction='none';}},initKeyboard:function(){if(this.isUsingKeyboard){return;}
this.isUsingKeyboard=true;window.addEventListener('keydown',this.keydown.bind(this),false);window.addEventListener('keyup',this.keyup.bind(this),false);},initAccelerometer:function(){if(this.isUsingAccelerometer){return;}
window.addEventListener('devicemotion',this.devicemotion.bind(this),false);},mousewheel:function(event){var delta=event.wheelDelta?event.wheelDelta:(event.detail*-1);var code=delta>0?ig.KEY.MWHEEL_UP:ig.KEY.MWHEEL_DOWN;var action=this.bindings[code];if(action){this.actions[action]=true;this.presses[action]=true;this.delayedKeyup[action]=true;event.stopPropagation();event.preventDefault();}},mousemove:function(event){var internalWidth=parseInt(ig.system.canvas.offsetWidth)||ig.system.realWidth;var scale=ig.system.scale*(internalWidth/ig.system.realWidth);var pos={left:0,top:0};if(ig.system.canvas.getBoundingClientRect){pos=ig.system.canvas.getBoundingClientRect();}
var ev=event.touches?event.touches[0]:event;this.mouse.x=(ev.clientX-pos.left)/scale;this.mouse.y=(ev.clientY-pos.top)/scale;},contextmenu:function(event){if(this.bindings[ig.KEY.MOUSE2]){event.stopPropagation();event.preventDefault();}},keydown:function(event){var tag=event.target.tagName;if(tag=='INPUT'||tag=='TEXTAREA'){return;}
var code=event.type=='keydown'?event.keyCode:(event.button==2?ig.KEY.MOUSE2:ig.KEY.MOUSE1);if(event.type=='touchstart'||event.type=='mousedown'){this.mousemove(event);}
var action=this.bindings[code];if(action){this.actions[action]=true;if(!this.locks[action]){this.presses[action]=true;this.locks[action]=true;}
event.stopPropagation();event.preventDefault();}},keyup:function(event){var tag=event.target.tagName;if(tag=='INPUT'||tag=='TEXTAREA'){return;}
var code=event.type=='keyup'?event.keyCode:(event.button==2?ig.KEY.MOUSE2:ig.KEY.MOUSE1);var action=this.bindings[code];if(action){this.delayedKeyup[action]=true;event.stopPropagation();event.preventDefault();}},devicemotion:function(event){this.accel=event.accelerationIncludingGravity;},bind:function(key,action){if(key<0){this.initMouse();}
else if(key>0){this.initKeyboard();}
this.bindings[key]=action;},bindTouch:function(selector,action){var element=ig.$(selector);var that=this;element.addEventListener('touchstart',function(ev){that.touchStart(ev,action);},false);element.addEventListener('touchend',function(ev){that.touchEnd(ev,action);},false);element.addEventListener('MSPointerDown',function(ev){that.touchStart(ev,action);},false);element.addEventListener('MSPointerUp',function(ev){that.touchEnd(ev,action);},false);},unbind:function(key){var action=this.bindings[key];this.delayedKeyup[action]=true;this.bindings[key]=null;},unbindAll:function(){this.bindings={};this.actions={};this.presses={};this.locks={};this.delayedKeyup={};},state:function(action){return this.actions[action];},pressed:function(action){return this.presses[action];},released:function(action){return this.delayedKeyup[action];},clearPressed:function(){for(var action in this.delayedKeyup){this.actions[action]=false;this.locks[action]=false;}
this.delayedKeyup={};this.presses={};},touchStart:function(event,action){this.actions[action]=true;this.presses[action]=true;event.stopPropagation();event.preventDefault();return false;},touchEnd:function(event,action){this.delayedKeyup[action]=true;event.stopPropagation();event.preventDefault();return false;}});});

// lib/impact/impact.js
ig.baked=true;ig.module('impact.impact').requires('dom.ready','impact.loader','impact.system','impact.input','impact.sound').defines(function(){"use strict";ig.main=function(canvasId,gameClass,fps,width,height,scale,loaderClass){ig.system=new ig.System(canvasId,fps,width,height,scale||1);ig.input=new ig.Input();ig.soundManager=new ig.SoundManager();ig.music=new ig.Music();ig.ready=true;var loader=new(loaderClass||ig.Loader)(gameClass,ig.resources);loader.load();};});

// lib/impact/animation.js
ig.baked=true;ig.module('impact.animation').requires('impact.timer','impact.image').defines(function(){"use strict";ig.AnimationSheet=ig.Class.extend({width:8,height:8,image:null,init:function(path,width,height){this.width=width;this.height=height;this.image=new ig.Image(path);}});ig.Animation=ig.Class.extend({sheet:null,timer:null,sequence:[],flip:{x:false,y:false},pivot:{x:0,y:0},frame:0,tile:0,loopCount:0,alpha:1,angle:0,init:function(sheet,frameTime,sequence,stop){this.sheet=sheet;this.pivot={x:sheet.width/2,y:sheet.height/2};this.timer=new ig.Timer();this.frameTime=frameTime;this.sequence=sequence;this.stop=!!stop;this.tile=this.sequence[0];},rewind:function(){this.timer.set();this.loopCount=0;this.tile=this.sequence[0];return this;},gotoFrame:function(f){this.timer.set(this.frameTime*-f);this.update();},gotoRandomFrame:function(){this.gotoFrame(Math.floor(Math.random()*this.sequence.length))},update:function(){var frameTotal=Math.floor(this.timer.delta()/this.frameTime);this.loopCount=Math.floor(frameTotal/this.sequence.length);if(this.stop&&this.loopCount>0){this.frame=this.sequence.length-1;}
else{this.frame=frameTotal%this.sequence.length;}
this.tile=this.sequence[this.frame];},draw:function(targetX,targetY){var bbsize=Math.max(this.sheet.width,this.sheet.height);if(targetX>ig.system.width||targetY>ig.system.height||targetX+bbsize<0||targetY+bbsize<0){return;}
if(this.alpha!=1){ig.system.context.globalAlpha=this.alpha;}
if(this.angle==0){this.sheet.image.drawTile(targetX,targetY,this.tile,this.sheet.width,this.sheet.height,this.flip.x,this.flip.y);}
else{ig.system.context.save();ig.system.context.translate(ig.system.getDrawPos(targetX+this.pivot.x),ig.system.getDrawPos(targetY+this.pivot.y));ig.system.context.rotate(this.angle);this.sheet.image.drawTile(-this.pivot.x,-this.pivot.y,this.tile,this.sheet.width,this.sheet.height,this.flip.x,this.flip.y);ig.system.context.restore();}
if(this.alpha!=1){ig.system.context.globalAlpha=1;}}});});

// lib/impact/entity.js
ig.baked=true;ig.module('impact.entity').requires('impact.animation','impact.impact').defines(function(){"use strict";ig.Entity=ig.Class.extend({id:0,settings:{},size:{x:16,y:16},offset:{x:0,y:0},pos:{x:0,y:0},last:{x:0,y:0},vel:{x:0,y:0},accel:{x:0,y:0},friction:{x:0,y:0},maxVel:{x:100,y:100},zIndex:0,gravityFactor:1,standing:false,bounciness:0,minBounceVelocity:40,anims:{},animSheet:null,currentAnim:null,health:10,type:0,checkAgainst:0,collides:0,_killed:false,slopeStanding:{min:(44).toRad(),max:(136).toRad()},init:function(x,y,settings){this.id=++ig.Entity._lastId;this.pos.x=x;this.pos.y=y;ig.merge(this,settings);},addAnim:function(name,frameTime,sequence,stop){if(!this.animSheet){throw('No animSheet to add the animation '+name+' to.');}
var a=new ig.Animation(this.animSheet,frameTime,sequence,stop);this.anims[name]=a;if(!this.currentAnim){this.currentAnim=a;}
return a;},update:function(){this.last.x=this.pos.x;this.last.y=this.pos.y;this.vel.y+=ig.game.gravity*ig.system.tick*this.gravityFactor;this.vel.x=this.getNewVelocity(this.vel.x,this.accel.x,this.friction.x,this.maxVel.x);this.vel.y=this.getNewVelocity(this.vel.y,this.accel.y,this.friction.y,this.maxVel.y);var mx=this.vel.x*ig.system.tick;var my=this.vel.y*ig.system.tick;var res=ig.game.collisionMap.trace(this.pos.x,this.pos.y,mx,my,this.size.x,this.size.y);this.handleMovementTrace(res);if(this.currentAnim){this.currentAnim.update();}},getNewVelocity:function(vel,accel,friction,max){if(accel){return(vel+accel*ig.system.tick).limit(-max,max);}
else if(friction){var delta=friction*ig.system.tick;if(vel-delta>0){return vel-delta;}
else if(vel+delta<0){return vel+delta;}
else{return 0;}}
return vel.limit(-max,max);},handleMovementTrace:function(res){this.standing=false;if(res.collision.y){if(this.bounciness>0&&Math.abs(this.vel.y)>this.minBounceVelocity){this.vel.y*=-this.bounciness;}
else{if(this.vel.y>0){this.standing=true;}
this.vel.y=0;}}
if(res.collision.x){if(this.bounciness>0&&Math.abs(this.vel.x)>this.minBounceVelocity){this.vel.x*=-this.bounciness;}
else{this.vel.x=0;}}
if(res.collision.slope){var s=res.collision.slope;if(this.bounciness>0){var proj=this.vel.x*s.nx+this.vel.y*s.ny;this.vel.x=(this.vel.x-s.nx*proj*2)*this.bounciness;this.vel.y=(this.vel.y-s.ny*proj*2)*this.bounciness;}
else{var lengthSquared=s.x*s.x+s.y*s.y;var dot=(this.vel.x*s.x+this.vel.y*s.y)/lengthSquared;this.vel.x=s.x*dot;this.vel.y=s.y*dot;var angle=Math.atan2(s.x,s.y);if(angle>this.slopeStanding.min&&angle<this.slopeStanding.max){this.standing=true;}}}
this.pos=res.pos;},draw:function(){if(this.currentAnim){this.currentAnim.draw(this.pos.x-this.offset.x-ig.game._rscreen.x,this.pos.y-this.offset.y-ig.game._rscreen.y);}},kill:function(){ig.game.removeEntity(this);},receiveDamage:function(amount,from){this.health-=amount;if(this.health<=0){this.kill();}},touches:function(other){return!(this.pos.x>=other.pos.x+other.size.x||this.pos.x+this.size.x<=other.pos.x||this.pos.y>=other.pos.y+other.size.y||this.pos.y+this.size.y<=other.pos.y);},distanceTo:function(other){var xd=(this.pos.x+this.size.x/2)-(other.pos.x+other.size.x/2);var yd=(this.pos.y+this.size.y/2)-(other.pos.y+other.size.y/2);return Math.sqrt(xd*xd+yd*yd);},angleTo:function(other){return Math.atan2((other.pos.y+other.size.y/2)-(this.pos.y+this.size.y/2),(other.pos.x+other.size.x/2)-(this.pos.x+this.size.x/2));},check:function(other){},collideWith:function(other,axis){},ready:function(){}});ig.Entity._lastId=0;ig.Entity.COLLIDES={NEVER:0,LITE:1,PASSIVE:2,ACTIVE:4,FIXED:8};ig.Entity.TYPE={NONE:0,A:1,B:2,BOTH:3};ig.Entity.checkPair=function(a,b){if(a.checkAgainst&b.type){a.check(b);}
if(b.checkAgainst&a.type){b.check(a);}
if(a.collides&&b.collides&&a.collides+b.collides>ig.Entity.COLLIDES.ACTIVE){ig.Entity.solveCollision(a,b);}};ig.Entity.solveCollision=function(a,b){var weak=null;if(a.collides==ig.Entity.COLLIDES.LITE||b.collides==ig.Entity.COLLIDES.FIXED){weak=a;}
else if(b.collides==ig.Entity.COLLIDES.LITE||a.collides==ig.Entity.COLLIDES.FIXED){weak=b;}
if(a.last.x+a.size.x>b.last.x&&a.last.x<b.last.x+b.size.x){if(a.last.y<b.last.y){ig.Entity.seperateOnYAxis(a,b,weak);}
else{ig.Entity.seperateOnYAxis(b,a,weak);}
a.collideWith(b,'y');b.collideWith(a,'y');}
else if(a.last.y+a.size.y>b.last.y&&a.last.y<b.last.y+b.size.y){if(a.last.x<b.last.x){ig.Entity.seperateOnXAxis(a,b,weak);}
else{ig.Entity.seperateOnXAxis(b,a,weak);}
a.collideWith(b,'x');b.collideWith(a,'x');}};ig.Entity.seperateOnXAxis=function(left,right,weak){var nudge=(left.pos.x+left.size.x-right.pos.x);if(weak){var strong=left===weak?right:left;weak.vel.x=-weak.vel.x*weak.bounciness+strong.vel.x;var resWeak=ig.game.collisionMap.trace(weak.pos.x,weak.pos.y,weak==left?-nudge:nudge,0,weak.size.x,weak.size.y);weak.pos.x=resWeak.pos.x;}
else{var v2=(left.vel.x-right.vel.x)/2;left.vel.x=-v2;right.vel.x=v2;var resLeft=ig.game.collisionMap.trace(left.pos.x,left.pos.y,-nudge/2,0,left.size.x,left.size.y);left.pos.x=Math.floor(resLeft.pos.x);var resRight=ig.game.collisionMap.trace(right.pos.x,right.pos.y,nudge/2,0,right.size.x,right.size.y);right.pos.x=Math.ceil(resRight.pos.x);}};ig.Entity.seperateOnYAxis=function(top,bottom,weak){var nudge=(top.pos.y+top.size.y-bottom.pos.y);if(weak){var strong=top===weak?bottom:top;weak.vel.y=-weak.vel.y*weak.bounciness+strong.vel.y;var nudgeX=0;if(weak==top&&Math.abs(weak.vel.y-strong.vel.y)<weak.minBounceVelocity){weak.standing=true;nudgeX=strong.vel.x*ig.system.tick;}
var resWeak=ig.game.collisionMap.trace(weak.pos.x,weak.pos.y,nudgeX,weak==top?-nudge:nudge,weak.size.x,weak.size.y);weak.pos.y=resWeak.pos.y;weak.pos.x=resWeak.pos.x;}
else if(ig.game.gravity&&(bottom.standing||top.vel.y>0)){var resTop=ig.game.collisionMap.trace(top.pos.x,top.pos.y,0,-(top.pos.y+top.size.y-bottom.pos.y),top.size.x,top.size.y);top.pos.y=resTop.pos.y;if(top.bounciness>0&&top.vel.y>top.minBounceVelocity){top.vel.y*=-top.bounciness;}
else{top.standing=true;top.vel.y=0;}}
else{var v2=(top.vel.y-bottom.vel.y)/2;top.vel.y=-v2;bottom.vel.y=v2;var nudgeX=bottom.vel.x*ig.system.tick;var resTop=ig.game.collisionMap.trace(top.pos.x,top.pos.y,nudgeX,-nudge/2,top.size.x,top.size.y);top.pos.y=resTop.pos.y;var resBottom=ig.game.collisionMap.trace(bottom.pos.x,bottom.pos.y,0,nudge/2,bottom.size.x,bottom.size.y);bottom.pos.y=resBottom.pos.y;}};});

// lib/impact/map.js
ig.baked=true;ig.module('impact.map').defines(function(){"use strict";ig.Map=ig.Class.extend({tilesize:8,width:1,height:1,data:[[]],name:null,init:function(tilesize,data){this.tilesize=tilesize;this.data=data;this.height=data.length;this.width=data[0].length;},getTile:function(x,y){var tx=Math.floor(x/this.tilesize);var ty=Math.floor(y/this.tilesize);if((tx>=0&&tx<this.width)&&(ty>=0&&ty<this.height)){return this.data[ty][tx];}
else{return 0;}},setTile:function(x,y,tile){var tx=Math.floor(x/this.tilesize);var ty=Math.floor(y/this.tilesize);if((tx>=0&&tx<this.width)&&(ty>=0&&ty<this.height)){this.data[ty][tx]=tile;}}});});

// lib/impact/collision-map.js
ig.baked=true;ig.module('impact.collision-map').requires('impact.map').defines(function(){"use strict";ig.CollisionMap=ig.Map.extend({lastSlope:1,tiledef:null,init:function(tilesize,data,tiledef){this.parent(tilesize,data);this.tiledef=tiledef||ig.CollisionMap.defaultTileDef;for(var t in this.tiledef){if(t|0>this.lastSlope){this.lastSlope=t|0;}}},trace:function(x,y,vx,vy,objectWidth,objectHeight){var res={collision:{x:false,y:false,slope:false},pos:{x:x,y:y},tile:{x:0,y:0}};var steps=Math.ceil(Math.max(Math.abs(vx),Math.abs(vy))/this.tilesize);if(steps>1){var sx=vx/steps;var sy=vy/steps;for(var i=0;i<steps&&(sx||sy);i++){this._traceStep(res,x,y,sx,sy,objectWidth,objectHeight,vx,vy,i);x=res.pos.x;y=res.pos.y;if(res.collision.x){sx=0;vx=0;}
if(res.collision.y){sy=0;vy=0;}
if(res.collision.slope){break;}}}
else{this._traceStep(res,x,y,vx,vy,objectWidth,objectHeight,vx,vy,0);}
return res;},_traceStep:function(res,x,y,vx,vy,width,height,rvx,rvy,step){res.pos.x+=vx;res.pos.y+=vy;var t=0;if(vx){var pxOffsetX=(vx>0?width:0);var tileOffsetX=(vx<0?this.tilesize:0);var firstTileY=Math.max(Math.floor(y/this.tilesize),0);var lastTileY=Math.min(Math.ceil((y+height)/this.tilesize),this.height);var tileX=Math.floor((res.pos.x+pxOffsetX)/this.tilesize);var prevTileX=Math.floor((x+pxOffsetX)/this.tilesize);if(step>0||tileX==prevTileX||prevTileX<0||prevTileX>=this.width){prevTileX=-1;}
if(tileX>=0&&tileX<this.width){for(var tileY=firstTileY;tileY<lastTileY;tileY++){if(prevTileX!=-1){t=this.data[tileY][prevTileX];if(t>1&&t<=this.lastSlope&&this._checkTileDef(res,t,x,y,rvx,rvy,width,height,prevTileX,tileY)){break;}}
t=this.data[tileY][tileX];if(t==1||t>this.lastSlope||(t>1&&this._checkTileDef(res,t,x,y,rvx,rvy,width,height,tileX,tileY))){if(t>1&&t<=this.lastSlope&&res.collision.slope){break;}
res.collision.x=true;res.tile.x=t;x=res.pos.x=tileX*this.tilesize-pxOffsetX+tileOffsetX;rvx=0;break;}}}}
if(vy){var pxOffsetY=(vy>0?height:0);var tileOffsetY=(vy<0?this.tilesize:0);var firstTileX=Math.max(Math.floor(res.pos.x/this.tilesize),0);var lastTileX=Math.min(Math.ceil((res.pos.x+width)/this.tilesize),this.width);var tileY=Math.floor((res.pos.y+pxOffsetY)/this.tilesize);var prevTileY=Math.floor((y+pxOffsetY)/this.tilesize);if(step>0||tileY==prevTileY||prevTileY<0||prevTileY>=this.height){prevTileY=-1;}
if(tileY>=0&&tileY<this.height){for(var tileX=firstTileX;tileX<lastTileX;tileX++){if(prevTileY!=-1){t=this.data[prevTileY][tileX];if(t>1&&t<=this.lastSlope&&this._checkTileDef(res,t,x,y,rvx,rvy,width,height,tileX,prevTileY)){break;}}
t=this.data[tileY][tileX];if(t==1||t>this.lastSlope||(t>1&&this._checkTileDef(res,t,x,y,rvx,rvy,width,height,tileX,tileY))){if(t>1&&t<=this.lastSlope&&res.collision.slope){break;}
res.collision.y=true;res.tile.y=t;res.pos.y=tileY*this.tilesize-pxOffsetY+tileOffsetY;break;}}}}},_checkTileDef:function(res,t,x,y,vx,vy,width,height,tileX,tileY){var def=this.tiledef[t];if(!def){return false;}
var lx=(tileX+def[0])*this.tilesize,ly=(tileY+def[1])*this.tilesize,lvx=(def[2]-def[0])*this.tilesize,lvy=(def[3]-def[1])*this.tilesize,solid=def[4];var tx=x+vx+(lvy<0?width:0)-lx,ty=y+vy+(lvx>0?height:0)-ly;if(lvx*ty-lvy*tx>0){if(vx*-lvy+vy*lvx<0){return solid;}
var length=Math.sqrt(lvx*lvx+lvy*lvy);var nx=lvy/length,ny=-lvx/length;var proj=tx*nx+ty*ny;var px=nx*proj,py=ny*proj;if(px*px+py*py>=vx*vx+vy*vy){return solid||(lvx*(ty-vy)-lvy*(tx-vx)<0.5);}
res.pos.x=x+vx-px;res.pos.y=y+vy-py;res.collision.slope={x:lvx,y:lvy,nx:nx,ny:ny};return true;}
return false;}});var H=1/2,N=1/3,M=2/3,SOLID=true,NON_SOLID=false;ig.CollisionMap.defaultTileDef={5:[0,1,1,M,SOLID],6:[0,M,1,N,SOLID],7:[0,N,1,0,SOLID],3:[0,1,1,H,SOLID],4:[0,H,1,0,SOLID],2:[0,1,1,0,SOLID],10:[H,1,1,0,SOLID],21:[0,1,H,0,SOLID],32:[M,1,1,0,SOLID],43:[N,1,M,0,SOLID],54:[0,1,N,0,SOLID],27:[0,0,1,N,SOLID],28:[0,N,1,M,SOLID],29:[0,M,1,1,SOLID],25:[0,0,1,H,SOLID],26:[0,H,1,1,SOLID],24:[0,0,1,1,SOLID],11:[0,0,H,1,SOLID],22:[H,0,1,1,SOLID],33:[0,0,N,1,SOLID],44:[N,0,M,1,SOLID],55:[M,0,1,1,SOLID],16:[1,N,0,0,SOLID],17:[1,M,0,N,SOLID],18:[1,1,0,M,SOLID],14:[1,H,0,0,SOLID],15:[1,1,0,H,SOLID],13:[1,1,0,0,SOLID],8:[H,1,0,0,SOLID],19:[1,1,H,0,SOLID],30:[N,1,0,0,SOLID],41:[M,1,N,0,SOLID],52:[1,1,M,0,SOLID],38:[1,M,0,1,SOLID],39:[1,N,0,M,SOLID],40:[1,0,0,N,SOLID],36:[1,H,0,1,SOLID],37:[1,0,0,H,SOLID],35:[1,0,0,1,SOLID],9:[1,0,H,1,SOLID],20:[H,0,0,1,SOLID],31:[1,0,M,1,SOLID],42:[M,0,N,1,SOLID],53:[N,0,0,1,SOLID],12:[0,0,1,0,NON_SOLID],23:[1,1,0,1,NON_SOLID],34:[1,0,1,1,NON_SOLID],45:[0,1,0,0,NON_SOLID]};ig.CollisionMap.staticNoCollision={trace:function(x,y,vx,vy){return{collision:{x:false,y:false,slope:false},pos:{x:x+vx,y:y+vy},tile:{x:0,y:0}};}};});

// lib/impact/background-map.js
ig.baked=true;ig.module('impact.background-map').requires('impact.map','impact.image').defines(function(){"use strict";ig.BackgroundMap=ig.Map.extend({tiles:null,scroll:{x:0,y:0},distance:1,repeat:false,tilesetName:'',foreground:false,enabled:true,preRender:false,preRenderedChunks:null,chunkSize:512,debugChunks:false,anims:{},init:function(tilesize,data,tileset){this.parent(tilesize,data);this.setTileset(tileset);},setTileset:function(tileset){this.tilesetName=tileset instanceof ig.Image?tileset.path:tileset;this.tiles=new ig.Image(this.tilesetName);this.preRenderedChunks=null;},setScreenPos:function(x,y){this.scroll.x=x/this.distance;this.scroll.y=y/this.distance;},preRenderMapToChunks:function(){var totalWidth=this.width*this.tilesize*ig.system.scale,totalHeight=this.height*this.tilesize*ig.system.scale;this.chunkSize=Math.min(Math.max(totalWidth,totalHeight),this.chunkSize);var chunkCols=Math.ceil(totalWidth/this.chunkSize),chunkRows=Math.ceil(totalHeight/this.chunkSize);this.preRenderedChunks=[];for(var y=0;y<chunkRows;y++){this.preRenderedChunks[y]=[];for(var x=0;x<chunkCols;x++){var chunkWidth=(x==chunkCols-1)?totalWidth-x*this.chunkSize:this.chunkSize;var chunkHeight=(y==chunkRows-1)?totalHeight-y*this.chunkSize:this.chunkSize;this.preRenderedChunks[y][x]=this.preRenderChunk(x,y,chunkWidth,chunkHeight);}}},preRenderChunk:function(cx,cy,w,h){var tw=w/this.tilesize/ig.system.scale+1,th=h/this.tilesize/ig.system.scale+1;var nx=(cx*this.chunkSize/ig.system.scale)%this.tilesize,ny=(cy*this.chunkSize/ig.system.scale)%this.tilesize;var tx=Math.floor(cx*this.chunkSize/this.tilesize/ig.system.scale),ty=Math.floor(cy*this.chunkSize/this.tilesize/ig.system.scale);var chunk=ig.$new('canvas');chunk.width=w;chunk.height=h;var oldContext=ig.system.context;ig.system.context=chunk.getContext("2d");for(var x=0;x<tw;x++){for(var y=0;y<th;y++){if(x+tx<this.width&&y+ty<this.height){var tile=this.data[y+ty][x+tx];if(tile){this.tiles.drawTile(x*this.tilesize-nx,y*this.tilesize-ny,tile-1,this.tilesize);}}}}
ig.system.context=oldContext;return chunk;},draw:function(){if(!this.tiles.loaded||!this.enabled){return;}
if(this.preRender){this.drawPreRendered();}
else{this.drawTiled();}},drawPreRendered:function(){if(!this.preRenderedChunks){this.preRenderMapToChunks();}
var dx=ig.system.getDrawPos(this.scroll.x),dy=ig.system.getDrawPos(this.scroll.y);if(this.repeat){var w=this.width*this.tilesize*ig.system.scale;dx=(dx%w+w)%w;var h=this.height*this.tilesize*ig.system.scale;dy=(dy%h+h)%h;}
var minChunkX=Math.max(Math.floor(dx/this.chunkSize),0),minChunkY=Math.max(Math.floor(dy/this.chunkSize),0),maxChunkX=Math.ceil((dx+ig.system.realWidth)/this.chunkSize),maxChunkY=Math.ceil((dy+ig.system.realHeight)/this.chunkSize),maxRealChunkX=this.preRenderedChunks[0].length,maxRealChunkY=this.preRenderedChunks.length;if(!this.repeat){maxChunkX=Math.min(maxChunkX,maxRealChunkX);maxChunkY=Math.min(maxChunkY,maxRealChunkY);}
var nudgeY=0;for(var cy=minChunkY;cy<maxChunkY;cy++){var nudgeX=0;for(var cx=minChunkX;cx<maxChunkX;cx++){var chunk=this.preRenderedChunks[cy%maxRealChunkY][cx%maxRealChunkX];var x=-dx+cx*this.chunkSize-nudgeX;var y=-dy+cy*this.chunkSize-nudgeY;ig.system.context.drawImage(chunk,x,y);ig.Image.drawCount++;if(this.debugChunks){ig.system.context.strokeStyle='#f0f';ig.system.context.strokeRect(x,y,this.chunkSize,this.chunkSize);}
if(this.repeat&&chunk.width<this.chunkSize&&x+chunk.width<ig.system.realWidth){nudgeX+=this.chunkSize-chunk.width;maxChunkX++;}}
if(this.repeat&&chunk.height<this.chunkSize&&y+chunk.height<ig.system.realHeight){nudgeY+=this.chunkSize-chunk.height;maxChunkY++;}}},drawTiled:function(){var tile=0,anim=null,tileOffsetX=(this.scroll.x/this.tilesize).toInt(),tileOffsetY=(this.scroll.y/this.tilesize).toInt(),pxOffsetX=this.scroll.x%this.tilesize,pxOffsetY=this.scroll.y%this.tilesize,pxMinX=-pxOffsetX-this.tilesize,pxMinY=-pxOffsetY-this.tilesize,pxMaxX=ig.system.width+this.tilesize-pxOffsetX,pxMaxY=ig.system.height+this.tilesize-pxOffsetY;for(var mapY=-1,pxY=pxMinY;pxY<pxMaxY;mapY++,pxY+=this.tilesize){var tileY=mapY+tileOffsetY;if(tileY>=this.height||tileY<0){if(!this.repeat){continue;}
tileY=(tileY%this.height+this.height)%this.height;}
for(var mapX=-1,pxX=pxMinX;pxX<pxMaxX;mapX++,pxX+=this.tilesize){var tileX=mapX+tileOffsetX;if(tileX>=this.width||tileX<0){if(!this.repeat){continue;}
tileX=(tileX%this.width+this.width)%this.width;}
if((tile=this.data[tileY][tileX])){if((anim=this.anims[tile-1])){anim.draw(pxX,pxY);}
else{this.tiles.drawTile(pxX,pxY,tile-1,this.tilesize);}}}}}});});

// lib/impact/game.js
ig.baked=true;ig.module('impact.game').requires('impact.impact','impact.entity','impact.collision-map','impact.background-map').defines(function(){"use strict";ig.Game=ig.Class.extend({clearColor:'#000000',gravity:0,screen:{x:0,y:0},_rscreen:{x:0,y:0},entities:[],namedEntities:{},collisionMap:ig.CollisionMap.staticNoCollision,backgroundMaps:[],backgroundAnims:{},autoSort:false,sortBy:null,cellSize:64,_deferredKill:[],_levelToLoad:null,_doSortEntities:false,staticInstantiate:function(){this.sortBy=this.sortBy||ig.Game.SORT.Z_INDEX;ig.game=this;return null;},loadLevel:function(data){this.screen={x:0,y:0};this.entities=[];this.namedEntities={};for(var i=0;i<data.entities.length;i++){var ent=data.entities[i];this.spawnEntity(ent.type,ent.x,ent.y,ent.settings);}
this.sortEntities();this.collisionMap=ig.CollisionMap.staticNoCollision;this.backgroundMaps=[];for(var i=0;i<data.layer.length;i++){var ld=data.layer[i];if(ld.name=='collision'){this.collisionMap=new ig.CollisionMap(ld.tilesize,ld.data);}
else{var newMap=new ig.BackgroundMap(ld.tilesize,ld.data,ld.tilesetName);newMap.anims=this.backgroundAnims[ld.tilesetName]||{};newMap.repeat=ld.repeat;newMap.distance=ld.distance;newMap.foreground=!!ld.foreground;newMap.preRender=!!ld.preRender;newMap.name=ld.name;this.backgroundMaps.push(newMap);}}
for(var i=0;i<this.entities.length;i++){this.entities[i].ready();}},loadLevelDeferred:function(data){this._levelToLoad=data;},getMapByName:function(name){if(name=='collision'){return this.collisionMap;}
for(var i=0;i<this.backgroundMaps.length;i++){if(this.backgroundMaps[i].name==name){return this.backgroundMaps[i];}}
return null;},getEntityByName:function(name){return this.namedEntities[name];},getEntitiesByType:function(type){var entityClass=typeof(type)==='string'?ig.global[type]:type;var a=[];for(var i=0;i<this.entities.length;i++){var ent=this.entities[i];if(ent instanceof entityClass&&!ent._killed){a.push(ent);}}
return a;},spawnEntity:function(type,x,y,settings){var entityClass=typeof(type)==='string'?ig.global[type]:type;if(!entityClass){throw("Can't spawn entity of type "+type);}
var ent=new(entityClass)(x,y,settings||{});this.entities.push(ent);if(ent.name){this.namedEntities[ent.name]=ent;}
return ent;},sortEntities:function(){this.entities.sort(this.sortBy);},sortEntitiesDeferred:function(){this._doSortEntities=true;},removeEntity:function(ent){if(ent.name){delete this.namedEntities[ent.name];}
ent._killed=true;ent.type=ig.Entity.TYPE.NONE;ent.checkAgainst=ig.Entity.TYPE.NONE;ent.collides=ig.Entity.COLLIDES.NEVER;this._deferredKill.push(ent);},run:function(){this.update();this.draw();},update:function(){if(this._levelToLoad){this.loadLevel(this._levelToLoad);this._levelToLoad=null;}
if(this._doSortEntities||this.autoSort){this.sortEntities();this._doSortEntities=false;}
this.updateEntities();this.checkEntities();for(var i=0;i<this._deferredKill.length;i++){this.entities.erase(this._deferredKill[i]);}
this._deferredKill=[];for(var tileset in this.backgroundAnims){var anims=this.backgroundAnims[tileset];for(var a in anims){anims[a].update();}}},updateEntities:function(){for(var i=0;i<this.entities.length;i++){var ent=this.entities[i];if(!ent._killed){ent.update();}}},draw:function(){if(this.clearColor){ig.system.clear(this.clearColor);}
this._rscreen.x=ig.system.getDrawPos(this.screen.x)/ig.system.scale;this._rscreen.y=ig.system.getDrawPos(this.screen.y)/ig.system.scale;var mapIndex;for(mapIndex=0;mapIndex<this.backgroundMaps.length;mapIndex++){var map=this.backgroundMaps[mapIndex];if(map.foreground){break;}
map.setScreenPos(this.screen.x,this.screen.y);map.draw();}
this.drawEntities();for(mapIndex;mapIndex<this.backgroundMaps.length;mapIndex++){var map=this.backgroundMaps[mapIndex];map.setScreenPos(this.screen.x,this.screen.y);map.draw();}},drawEntities:function(){for(var i=0;i<this.entities.length;i++){this.entities[i].draw();}},checkEntities:function(){var hash={};for(var e=0;e<this.entities.length;e++){var entity=this.entities[e];if(entity.type==ig.Entity.TYPE.NONE&&entity.checkAgainst==ig.Entity.TYPE.NONE&&entity.collides==ig.Entity.COLLIDES.NEVER){continue;}
var checked={},xmin=Math.floor(entity.pos.x/this.cellSize),ymin=Math.floor(entity.pos.y/this.cellSize),xmax=Math.floor((entity.pos.x+entity.size.x)/this.cellSize)+1,ymax=Math.floor((entity.pos.y+entity.size.y)/this.cellSize)+1;for(var x=xmin;x<xmax;x++){for(var y=ymin;y<ymax;y++){if(!hash[x]){hash[x]={};hash[x][y]=[entity];}
else if(!hash[x][y]){hash[x][y]=[entity];}
else{var cell=hash[x][y];for(var c=0;c<cell.length;c++){if(entity.touches(cell[c])&&!checked[cell[c].id]){checked[cell[c].id]=true;ig.Entity.checkPair(entity,cell[c]);}}
cell.push(entity);}}}}}});ig.Game.SORT={Z_INDEX:function(a,b){return a.zIndex-b.zIndex;},POS_X:function(a,b){return(a.pos.x+a.size.x)-(b.pos.x+b.size.x);},POS_Y:function(a,b){return(a.pos.y+a.size.y)-(b.pos.y+b.size.y);}};});

// lib/game/entities/pointer.js
ig.baked=true;ig.module('game.entities.pointer').requires('impact.entity').defines(function(){EntityPointer=ig.Entity.extend({checkAgainst:ig.Entity.TYPE.B,size:{x:1,y:1},mousePressed:{x:0,y:0},dragging:false,init:function(x,y,settings){this.parent(x,y,settings);ig.game.pointer=this;},update:function(){this.pos.x=ig.input.mouse.x;this.pos.y=ig.input.mouse.y;},check:function(other){if(other.textBg&&other.clickable){if(other.textBg!=='#157203'){other.textBg='#157203';}}
if(ig.input.pressed('mouse1')&&other.clickable){other.clicked();}
else if(ig.input.state('mouse1')&&other.draggable){if(this.mousePressed.x===0&&this.mousePressed.y===0){this.mousePressed.x=this.pos.x;this.mousePressed.y=this.pos.y;}
var distance=Math.sqrt(Math.pow((this.mousePressed.x-this.pos.x),2)+Math.pow((this.mousePressed.y-this.pos.y),2));if(distance>5){if(!other.beingDragged&&!this.dragging){other.beingDragged=true;}
this.dragging=true;}}
if(ig.input.released('mouse1')){if(other.beingDragged){other.stopDrag();this.mousePressed.x=0;this.mousePressed.y=0;this.dragging=false;}
else if(other.releasable){other.released();}}}});});

// lib/game/entities/snail.js
ig.baked=true;ig.module('game.entities.snail').requires('impact.entity').defines(function(){"use strict";ig.global.EntitySnail=ig.Entity.extend({type:ig.Entity.TYPE.B,inDb:false,size:{x:150,y:117},maxSize:{x:150,y:117},offset:{x:0,y:0},guiPos:{x:10,y:400},visualSpeed:0,speed:0,endurance:0,weight:0,health:0,minStat:1,maxStat:5,shellRadius:56,draggable:true,releasable:true,name:'Unnamed',age:1,ageInterval:60,ageIncrement:1,scale:1,scaleIncrement:0.01,adult:false,maxScale:1,shellColor:{r:255,g:255,b:255},eyeColor:{r:255,g:255,b:255},patternColor:{r:255,g:255,b:255},patternShape:null,genes:{shellColor:{allele1:null,allele2:null},eyeColor:{allele1:null,allele2:null},patternColor:{allele1:null,allele2:null},patternShape:{allele1:null,allele2:null}},inJar:null,parentJar:null,visible:false,inUse:false,orientation:0,arousalDelay:0,minArousalDelay:1,maxArousalDelay:15,inBreedingJar:false,mating:false,mate:null,stag:null,doe:null,dependentsArr:[],dispStats:false,flip:true,animSheet:new ig.AnimationSheet('media/sprites/snail-template.png',150,117),init:function(x,y,settings){this.parent(x,y,settings);ig.game.pool.addToPool(this,ig.game.pool.allSnailsArr);this.anims.idle=new ig.Animation(this.animSheet,1,[0],false);this.currentAnim=this.anims.idle;this.ctx=ig.game.ctx;this.arousalTimer=new ig.Timer(this.arousalDelay);this.arousalTimer.pause();this.ageTimer=new ig.Timer(this.ageInterval);this.ageTimer.pause();},initialize:function(){if(!this.loadedSnail){if(this.starterSnail){console.log('startersnail');this.genRandomStats();this.generateRandomGenestring();var weightPercentage=ig.game.controller.calcPercentage(this.weight,5);this.maxScale=ig.game.controller.calcTargetPercentageValue(weightPercentage,1);if(this.maxScale>1){this.maxScale=1;}
this.maxSize.x=ig.game.controller.calcTargetPercentageValue(weightPercentage,150);this.maxSize.y=ig.game.controller.calcTargetPercentageValue(weightPercentage,117);this.size.x=this.maxSize.x;this.size.y=this.maxSize.y;this.adult=true;this.age=3;this.scale=this.maxScale;}
else if(this.newbornSnail){console.log('newborn snail');this.generateStats();var weightPercentage=ig.game.controller.calcPercentage(this.weight,5);this.maxScale=ig.game.controller.calcTargetPercentageValue(weightPercentage,1);if(this.maxScale>1){this.maxScale=1;}
this.maxSize.x=ig.game.controller.calcTargetPercentageValue(weightPercentage,150);this.maxSize.y=ig.game.controller.calcTargetPercentageValue(weightPercentage,117);this.size.x=this.maxSize.x;this.size.y=this.maxSize.y;this.adult=false;this.age=0;this.scale=0.3;}}
else{var weightPercentage=ig.game.controller.calcPercentage(this.weight,5);this.maxSize.x=ig.game.controller.calcTargetPercentageValue(weightPercentage,150);this.maxSize.y=ig.game.controller.calcTargetPercentageValue(weightPercentage,117);}
this.addToJar();this.health=this.weight+this.endurance;this.visualSpeed=this.speed*5;this.ageTimer.set(this.ageInterval);this.ageTimer.unpause();var rand=ig.game.controller.randomFromTo(0,1);if(rand===0){this.flip=true;}
else{this.flip=false;}
var xPos=ig.game.controller.randomFromTo(10,ig.system.width-10);this.pos.x=xPos;this.pos.y=200+(117-this.size.y);var xdir=this.flip?1:-1;this.vel.x=this.visualSpeed*xdir;this.currSpeed=this.speed;this.currEndurance=this.endurance;if(!this.inDb){this.inDb=true;console.log('adding to db..once '+this.id);ig.game.impactSocket.saveSnail(this);}
console.log('size: '+this.size.x+' '+this.size.y+' name: '+this.name);},addToJar:function(){console.log('addToJar()');var allJars=ig.game.pool.allJarsArr;var length=allJars.length;for(var i=length;i>0;i--){var jar=allJars[i-1];if(!this.inJar){if(jar.inUse&&jar.occupantsArr.length<jar.maxOccupants){this.parentJar=jar.jarID;this.inJar=jar.jarID;this.parentJar=jar;jar.addSnail(this);}}
else if(this.inJar===jar.jarID){jar.addSnail(this);this.parentJar=jar;}
if(this.inBreedingJar){console.log('in breeding jar');ig.game.breedingJar.addSnail(this);}
if(jar.open){this.visible=true;}
break;}},update:function(){if(this.inUse){if(this.flip&&!this.currentAnim.flip.x){this.currentAnim.flip.x=true;}
else if(!this.flip&&this.currentAnim.flip.x){this.currentAnim.flip.x=false;}
if(this.pos.x<=0+this.size.x&&!this.flip){this.flip=true;this.currentAnim.flip.x=true;var xdir=this.flip?1:-1;this.vel.x=this.visualSpeed*xdir;}
else if(this.pos.x>=ig.system.width-this.size.x&&this.flip){this.flip=false;this.currentAnim.flip.x=false;var xdir=this.flip?1:-1;this.vel.x=this.visualSpeed*xdir;}
if(this.mating&&this.arousalTimer.delta()>0){this.arousalTimer.set(this.arousalDelay);this.arousalTimer.pause();ig.game.breedingJar.generateBabySnail(this,this.mate);}
if(this.scale<this.maxScale){this.scale+=this.scaleIncrement*ig.system.tick;this.size.x=this.maxSize.x*this.scale;this.size.y=this.maxSize.y*this.scale;this.pos.y=200+(117-this.size.y);}
else{if(!this.adult){this.adult=true;this.scale=this.maxScale;this.size.x=this.maxSize.x*this.scale;this.size.y=this.maxSize.y*this.scale;this.pos.y=200+(117-this.maxSize.y);}}
if(this.draggable){if(this.beingDragged){this.drag(ig.game.pointer);}}
this.parent();}},draw:function(){if(this.inUse&&this.visible){this.ctx.strokeStyle='black';this.ctx.lineWidth=5;this.drawShell();this.drawEyes();this.drawPattern();this.ctx.save();this.ctx.translate(ig.system.getDrawPos(this.pos.x-this.offset.x-ig.game.screen.x),ig.system.getDrawPos(this.pos.y-this.offset.y-ig.game.screen.y));this.ctx.scale(this.scale,this.scale);this.currentAnim.draw(0,0);this.ctx.restore();}},drag:function(pointer){this.pos.x=pointer.pos.x-this.size.x/2;this.pos.y=pointer.pos.y-this.size.y/2;},stopDrag:function(){this.beingDragged=false;if(ig.game.raceListGui&&ig.game.raceListGui.openRace){if(ig.game.raceListGui.openRaceEntrantsArr.length<ig.game.raceListGui.openRace.reqEntrants){var raceSlotsArr=ig.game.controller.findTriggerByKind('raceSlot',true);for(var i=0;i<raceSlotsArr.length;i++){var slot=raceSlotsArr[i];if(this.touches(slot)){if(!slot.temp.slotOccupied){ig.game.gui.updateRaceList(this);break;}
else{console.log('slot already occupied');}}}}}
this.pos.y=200+(117-this.size.y);},released:function(){if(this.visible){if(!this.dispStats){this.dispStats=true;ig.game.pool.freeAllObjects('snailstatsgui');ig.game.pool.useObject('snailstatsgui',{parentEntity:this});}
else{this.dispStats=false;ig.game.gui.closeAllDependents(this);}}},destroy:function(){if(this.inUse){ig.game.pool.freeObject(this);this.kind=null;this.parentEntity=null;this.pos={x:-200,y:-200};this.ageTimer.reset();this.ageTimer.pause();}},activateArousalTimer:function(mate,delay){this.mate=mate;this.arousalTimer.set(delay);},genRandomStats:function(){this.speed=ig.game.controller.randomFromTo(this.minStat,this.maxStat);this.endurance=ig.game.controller.randomFromTo(this.minStat,this.maxStat);this.weight=ig.game.controller.randomFromTo(this.minStat,this.maxStat);this.shellColor=ig.game.controller.pickRandomColor(0,255,0,255,0,255);this.eyeColor=ig.game.controller.pickRandomColor(0,255,0,255,0,255);this.patternColor=ig.game.controller.pickRandomColor(0,255,0,255,0,255);this.patternShape=ig.game.controller.randomFromTo(1,3);this.arousalDelay=ig.game.controller.randomFromTo(this.minArousalDelay,this.maxArousalDelay);},generateStats:function(){this.speed=this.generateBackgroundTraits(this.speed,this.stag.speed,this.doe.speed);this.endurance=this.generateBackgroundTraits(this.endurance,this.stag.endurance,this.doe.endurance);this.weight=this.generateBackgroundTraits(this.weight,this.stag.weight,this.doe.weight);this.arousalDelay=this.generateBackgroundTraits(this.arousalDelay,this.stag.arousalDelay,this.doe.arousalDelay);this.generateAlleles(this.genes.shellColor,this.stag.genes.shellColor,this.doe.genes.shellColor);this.shellColor=this.generateVisibleTraits(this.shellColor,this.stag.shellColor,this.doe.shellColor);this.generateAlleles(this.genes.eyeColor,this.stag.genes.eyeColor,this.doe.genes.eyeColor);this.eyeColor=this.generateVisibleTraits(this.eyeColor,this.stag.eyeColor,this.doe.eyeColor);this.generateAlleles(this.genes.patternColor,this.stag.genes.patternColor,this.doe.genes.patternColor);this.patternColor=this.generateVisibleTraits(this.patternColor,this.stag.patternColor,this.doe.patternColor);this.generateAlleles(this.genes.patternShape,this.stag.genes.patternShape,this.doe.genes.patternShape);this.patternShape=this.generateVisibleTraits(this.patternShape,this.stag.patternShape,this.doe.patternShape);},generateBackgroundTraits:function(trait,stagTrait,doeTrait){var traitAverage=(stagTrait+doeTrait)/2;var modifier=ig.game.controller.calcTargetPercentageValue(5,traitAverage);modifier=ig.game.controller.decimalRandomFromTo(-modifier,modifier);console.log('modifier: '+modifier);var finalTrait=traitAverage+modifier;if(finalTrait<0){finalTrait=1;}
return finalTrait;},generateVisibleTraits:function(trait,stagTrait,doeTrait){var color;var alleles=this.getAllele(trait);console.log('getting allele for trait: '+trait);var allele1Dominant=this.checkAlleleDominance(alleles.allele1);var allele2Dominant=this.checkAlleleDominance(alleles.allele2);if(trait!==this.patternShape){if(allele1Dominant&&!allele2Dominant){return this.pickColor(alleles.allele1,stagTrait);}
else if(allele2Dominant&&!allele1Dominant){return this.pickColor(alleles.allele2,doeTrait);}
else if(allele1Dominant&&allele2Dominant||!allele1Dominant&&!allele2Dominant){var a1=alleles.allele1.toUpperCase();var a2=alleles.allele2.toUpperCase();switch(true){case a1==='R'||a2==='R':return this.pickColor('R');break;case a1==='G'||a2==='G':return this.pickColor('G');break;case a1==='B'||a2==='B':return this.pickColor('B');break;}}}
else{if(allele1Dominant&&!allele2Dominant){return this.pickShape(alleles.allele1);}
else if(allele2Dominant&&!allele1Dominant){return this.pickShape(alleles.allele2);}
else if(allele1Dominant&&allele2Dominant||!allele1Dominant&&!allele2Dominant){var rand=ig.game.controller.randomFromTo(0,1);if(rand===0){return this.pickShape(alleles.allele1);}
else{return this.pickShape(alleles.allele2);}}}},pickColor:function(allele,parentTrait){var c=allele.toUpperCase();var color;var minValue=0;var maxValue=255;switch(c){case'R':if(parentTrait){minValue=parentTrait.r-50;}
return ig.game.controller.pickRandomColor(minValue,maxValue,0,minValue,0,minValue);break;case'G':if(parentTrait){minValue=parentTrait.g-50;}
return ig.game.controller.pickRandomColor(0,minValue,minValue,maxValue,0,minValue);break;case'B':if(parentTrait){minValue=parentTrait.g-50;}
return ig.game.controller.pickRandomColor(0,minValue,0,minValue,minValue,maxValue);break;}},pickShape:function(allele){var s=allele.toUpperCase();switch(s){case'A':return 1;break;case'B':return 2;break;case'C':return 3;break;}},generateAlleles:function(trait,stagTrait,doeTrait){var possibilities=[{allele1:stagTrait.allele1,allele2:doeTrait.allele1},{allele1:stagTrait.allele1,allele2:doeTrait.allele2},{allele1:stagTrait.allele2,allele2:doeTrait.allele1},{allele1:stagTrait.allele2,allele2:doeTrait.allele2}];var rand=ig.game.controller.randomFromTo(0,3);trait.allele1=possibilities[rand].allele1;trait.allele2=possibilities[rand].allele2;},generateRandomGenestring:function(){var allele=ig.game.controller.getHighestNumber(this.shellColor,true);this.genes.shellColor.allele1=allele.toUpperCase();this.genes.shellColor.allele2=allele;var allele=ig.game.controller.getHighestNumber(this.eyeColor,true);this.genes.eyeColor.allele1=allele.toUpperCase();this.genes.eyeColor.allele2=allele;var allele=ig.game.controller.getHighestNumber(this.patternColor,true);this.genes.patternColor.allele1=allele.toUpperCase();this.genes.patternColor.allele2=allele;switch(this.patternShape){case 1:this.genes.patternShape.allele1='A';this.genes.patternShape.allele2='a';break;case 2:this.genes.patternShape.allele1='B';this.genes.patternShape.allele2='b';break;case 3:this.genes.patternShape.allele1='C';this.genes.patternShape.allele2='c';break;}},getAllele:function(trait){switch(trait){case this.shellColor:return this.genes.shellColor;break;case this.eyeColor:return this.genes.eyeColor;break;case this.patternColor:return this.genes.patternColor;break;case this.patternShape:return this.genes.patternShape;break;}},checkAlleleDominance:function(allele){if(allele===allele.toUpperCase()){return true;}
else{return false;}},drawShell:function(){var yPos=this.pos.y+60*this.scale;if(!this.flip){var xPos=this.pos.x+90*this.scale;}
else{var xPos=this.pos.x+60*this.scale;}
this.ctx.fillStyle='rgba('+this.shellColor.r+','+this.shellColor.g+','+this.shellColor.b+', 1)';this.ctx.beginPath();this.ctx.arc(xPos,yPos,this.shellRadius*this.scale,0,Math.PI*2,true);this.ctx.fill();},drawEyes:function(){var yPos=this.pos.y+50*this.scale;if(!this.flip){var xPos=this.pos.x+5*this.scale;}
else{var xPos=this.pos.x+115*this.scale;}
this.ctx.fillStyle='rgba('+this.eyeColor.r+','+this.eyeColor.g+','+this.eyeColor.b+', 1)';this.ctx.fillRect(xPos,yPos,10*this.scale,15*this.scale);xPos+=20*this.scale;this.ctx.fillRect(xPos,yPos,10*this.scale,15*this.scale);},drawPattern:function(){var yPos=this.pos.y+60*this.scale;if(!this.flip){var xPos=this.pos.x+50*this.scale;}
else{var xPos=this.pos.x+20*this.scale;}
var patternRadius=10;switch(this.patternShape){case 1:for(var i=0;i<3;i++){switch(i){case 0:xPos+=35*this.scale;yPos-=20*this.scale;break;case 1:xPos-=15*this.scale;yPos+=25*this.scale;break;case 2:xPos+=30*this.scale;break;}
this.ctx.beginPath();this.ctx.arc(xPos,yPos,patternRadius*this.scale,0,Math.PI*2,true);this.ctx.stroke();this.ctx.fill();}
break;case 2:patternRadius=20;yPos-=10*this.scale;for(var i=0;i<3;i++){this.ctx.beginPath();this.ctx.rect(xPos,yPos,patternRadius*this.scale,patternRadius*this.scale);this.ctx.stroke();this.ctx.fill();xPos+=(patternRadius+10)*this.scale;}
break;}},drawStats:function(){var x=this.guiPos.x;var y=this.guiPos.y;this.ctx.fillStyle='rgba(0,0,0,0.5)';this.ctx.fillRect(this.guiPos.x,this.guiPos.y,350,100);var lineIncrement=20;this.ctx.font='15pt Arial';this.ctx.fillStyle='#000000';this.ctx.fillText('Speed: '+this.speed,x,y);y+=lineIncrement;this.ctx.fillText('Endurance: '+this.endurance,x,y);y+=lineIncrement;this.ctx.fillText('Weight: '+this.weight,x,y);y+=lineIncrement;this.ctx.fillText('Mating: '+this.mating,x,y);y+=lineIncrement;if(!this.stag){this.ctx.fillText('ID: '+this.id,x,y);}
else{this.ctx.fillText('ID: '+this.id+' stag: '+this.stag.id+' doe: '+this.doe.id,x,y);}},});});

// lib/game/entities/breedingjar.js
ig.baked=true;ig.module('game.entities.breedingjar').requires('impact.entity').defines(function(){"use strict";ig.global.EntityBreedingJar=ig.Entity.extend({type:ig.Entity.TYPE.B,size:{x:100,y:133},clickable:true,occupantsArr:[],breedableOccupants:0,minBreedingTime:5,maxBreedingTime:10,open:false,animSheet:new ig.AnimationSheet('media/items/breeding-jar.png',100,133),init:function(x,y,settings){this.parent(x,y,settings);this.ctx=ig.game.ctx;ig.game.breedingJar=this;this.anims.idle=new ig.Animation(this.animSheet,1,[0]);this.currentAnim=this.anims.idle;this.initialize();},initialize:function(){this.pos.x=ig.system.width/2-this.size.x;this.pos.y=10;this.breedingTimer=new ig.Timer(0);this.resetBreedingTimer();},update:function(){if(this.breedableOccupants>1){if(this.breedingTimer.delta()>0){console.log('breeding timer done');this.resetBreedingTimer();this.pickBreedingPair();}
this.parent();}},draw:function(){this.parent();this.ctx.save();this.ctx.font='50pt Arial'
this.ctx.fillStyle='#925ba7';this.ctx.textAlign='center';this.ctx.fillText(this.occupantsArr.length,this.pos.x+this.size.x/2,this.pos.y+this.size.y/3);this.ctx.restore();},clicked:function(){if(!this.open){console.log('opening');for(var i=0;i<ig.game.pool.allJarsArr.length;i++){var jar=ig.game.pool.allJarsArr[i];if(jar.inUse&&jar.open){console.log('clicked');jar.clicked();}}
this.open=true;for(var i=0;i<this.occupantsArr.length;i++){var snail=this.occupantsArr[i];snail.visible=true;}}
else{console.log('now closed');this.open=false;for(var i=0;i<this.occupantsArr.length;i++){var snail=this.occupantsArr[i];snail.visible=false;snail.dispStats=false;ig.game.gui.closeAllDependents(snail);}}},resetBreedingTimer:function(){var breedingTime=ig.game.controller.randomFromTo(this.minBreedingTime,this.maxBreedingTime);this.breedingTimer.set(breedingTime);},pickBreedingPair:function(){console.log('picking breeding pair');var snail1;var snail2;snail1=this.pickBreedableSnail();snail1.mating=true;snail2=this.pickBreedableSnail();snail2.mating=true;this.checkBreedableOccupants();console.log('snail1: '+snail1.shellColor.r+' snail2: '+snail2.shellColor.r);this.setArousalTimer(snail1,snail2);},pickBreedableSnail:function(){this.occupantsArr=ig.game.controller.shuffleArray(this.occupantsArr);if(this.occupantsArr[0].mating){console.log('picking again');this.pickBreedableSnail();}
return this.occupantsArr[0];},setArousalTimer:function(snail1,snail2){var arousalDelay;if(snail1.arousalDelay>snail2.arousalDelay){arousalDelay=snail1.arousalDelay;}
else{arousalDelay=snail2.arousalDelay;}
this.assignGenders(snail1,snail2,arousalDelay);},assignGenders:function(snail1,snail2,arousalDelay){if(snail1.orientation>snail2.orientation){snail1.orientation=100;snail2.orientation=-100;snail2.activateArousalTimer(snail1,arousalDelay);console.log('snail1 male!');}
else if(snail1.orientation<snail2.orientation){snail1.orientation=-100;snail2.orientation=100;snail1.activateArousalTimer(snail2,arousalDelay);console.log('snail2 male!');}
else if(snail1.orientation===snail2.orientation){var rand=ig.game.controller.randomFromTo(0,1);if(rand===0){snail1.orientation=100;snail2.orientation=-100;snail2.activateArousalTimer(snail1,arousalDelay);console.log('rand snail1 male!');}
else{snail1.orientation=-100;snail2.orientation=100;snail1.activateArousalTimer(snail2,arousalDelay);console.log('rand snail2 male!');}}},generateBabySnail:function(snail1,snail2){console.log('generating baby snail');var stag;var doe;var x=snail1.pos.x+snail1.size.x+10;var y=10;var y;if(snail1.orientation===100){stag=snail1;doe=snail2;}
else{stag=snail2;doe=snail1;}
ig.game.pool.useObject('snail',{pos:{x:x,y:y},newbornSnail:true,stag:stag,doe:doe});this.removeSnail(snail1);snail1.mate=null;snail1.mating=false;this.removeSnail(snail2);snail2.mate=null;snail2.mating=false;},addSnail:function(snail){snail.parentJar.removeSnail(snail);this.occupantsArr.push(snail);this.resetBreedingTimer();this.checkBreedableOccupants();ig.game.impactSocket.updateSnail(snail.snailID,'inBreedingJar',true);},removeSnail:function(snail){ig.game.controller.removeFromArray(snail,this.occupantsArr);snail.inBreedingJar=false;snail.dispStats=false;ig.game.gui.closeAllDependents(snail);this.checkBreedableOccupants();snail.parentJar.addSnail(snail);ig.game.impactSocket.updateSnail(snail.snailID,'inBreedingJar',false);snail.visible=false;},checkBreedableOccupants:function(){var total=0;for(var i=0;i<this.occupantsArr.length;i++){var occupant=this.occupantsArr[i];if(!occupant.mating){total++;}}
this.breedableOccupants=total;}});});

// lib/game/entities/jar.js
ig.baked=true;ig.module('game.entities.jar').requires('impact.entity').defines(function(){"use strict";ig.global.EntityJar=ig.Entity.extend({type:ig.Entity.TYPE.B,checkAgainst:ig.Entity.TYPE.NONE,inUse:false,jarID:null,size:{x:100,y:133},occupantsArr:[],maxOccupants:100,activeOccupants:0,maxSpaces:6,occupantsGrid:[{x:10,y:220,occupied:false},{x:10,y:342,occupied:false},{x:10,y:464,occupied:false},{x:10,y:586,occupied:false},{x:300,y:220,occupied:false},{x:300,y:342,occupied:false},{x:300,y:464,occupied:false},{x:300,y:586,occupied:false}],open:false,clickable:true,animSheet:new ig.AnimationSheet('media/items/jar.png',100,133),init:function(x,y,settings){this.parent(x,y,settings);this.ctx=ig.game.ctx;ig.game.pool.addToPool(this,ig.game.pool.allJarsArr);this.jarID=ig.game.pool.allJarsArr.length;this.anims.idle=new ig.Animation(this.animSheet,1,[0]);this.ctx=ig.game.ctx;this.currentAnim=this.anims.idle;},initialize:function(){this.open=true;console.log('active jars: '+ig.game.controller.activeJars);},update:function(){if(this.inUse){this.parent();}},draw:function(){if(this.inUse){this.parent();this.ctx.save();this.ctx.font='50pt Arial'
this.ctx.fillStyle='#4a8abc';this.ctx.textAlign='center';this.ctx.fillText(this.occupantsArr.length,this.pos.x+this.size.x/2,this.pos.y+this.size.y/3);this.ctx.restore();}},clicked:function(){if(!this.open){for(var i=0;i<ig.game.pool.allJarsArr.length;i++){var jar=ig.game.pool.allJarsArr[i];if(jar.inUse&&jar.open){jar.clicked();}}
if(ig.game.breedingJar.open){ig.game.breedingJar.clicked();}
this.open=true;for(var i=0;i<this.occupantsArr.length;i++){var snail=this.occupantsArr[i];snail.visible=true;}}
else{this.open=false;for(var i=0;i<this.occupantsArr.length;i++){var snail=this.occupantsArr[i];snail.visible=false;snail.dispStats=false;ig.game.gui.closeAllDependents(snail);}}},addSnail:function(snail){this.occupantsArr.push(snail);this.activeOccupants++;snail.visible=true;},removeSnail:function(snail){ig.game.controller.removeFromArray(snail,this.occupantsArr);snail.visible=false;snail.dispStats=false;ig.game.gui.closeAllDependents(snail);}});});

// lib/game/entities/gui.js
ig.baked=true;ig.module('game.entities.gui').requires('impact.entity').defines(function(){"use strict";ig.global.EntityGui=ig.Entity.extend({type:ig.Entity.TYPE.NONE,size:{x:1,y:1},zIndex:2,headingsColor:'#52CC52',headingsFont:'40pt Arial',headingsLineIncrement:55,maintextColor:'#CCCCCC',maintextFont:'20pt Arial',maintextLineIncrement:30,dispMenuPanel2:null,menuPanel2Pos:{x:450,y:350},menuPanel2Size:{x:205,y:400},init:function(x,y,settings){this.parent(x,y,settings);this.ctx=ig.game.ctx;ig.game.gui=this;},loadElements:function(currentLevel){switch(currentLevel){case LevelMain:ig.game.spawnEntity(EntitySnailStatsGUI,0,0,{inUse:false});ig.game.pool.useObject('trigger',{kind:'racesButton'});}},update:function(){this.parent();},draw:function(){},closeAllDependents:function(entity){if(entity.dependentsArr){var length=entity.dependentsArr.length;for(var i=0;i<length;i++){var dependentEntity=entity.dependentsArr[i];if(dependentEntity.dependentsArr.length>0){this.closeAllDependents(dependentEntity);dependentEntity.dependentsArr.length=0;}
dependentEntity.destroy();}
entity.dependentsArr.length=0;}},closeSomeDependents:function(kind,entity){if(entity.dependentsArr){var length=entity.dependentsArr.length;for(var i=0;i<entity.dependentsArr.length;i++){var dependentEntity=entity.dependentsArr[i];if(dependentEntity.kind===kind){if(dependentEntity.dependentsArr.length>0){this.closeAllDependents(dependentEntity);dependentEntity.dependentsArr.length=0;}
dependentEntity.destroy();}}}},updateRaceList:function(entrant){ig.game.impactSocket.refreshRaceSlots(entrant);this.spawnRacelist(null);},spawnRacelist:function(races){var openRace=null;if(ig.game.raceListGui){if(ig.game.raceListGui.openRace!==null){openRace=ig.game.raceListGui.openRace;}
var racesButton=ig.game.controller.findTriggerByKind('racesButton');this.closeAllDependents(racesButton);if(openRace&&openRace._id){ig.game.spawnEntity(EntityRacelistGUI,0,0,{openRace:openRace});}
else{ig.game.spawnEntity(EntityRacelistGUI,0,0);}}
else{ig.game.spawnEntity(EntityRacelistGUI,0,0);}}});ig.global.EntitySnailStatsGUI=ig.Entity.extend({type:ig.Entity.TYPE.NONE,size:{x:1,y:1},pos:{x:10,y:350},zIndex:2,parentEntity:null,dependentsArr:[],openRace:null,init:function(x,y,settings){this.parent(x,y,settings);this.ctx=ig.game.ctx;this.size.x=ig.system.width-20;this.pos.x=10;this.pos.y=350;ig.game.pool.addToPool(this,ig.game.pool.allSnailStatsGUI);},initialize:function(){if(this.parentEntity){this.parentEntity.dependentsArr.push(this);this.gui=ig.game.gui;}
var x=this.pos.x+250;var y=this.pos.y;ig.game.pool.useObject('trigger',{pos:{x:x,y:y},kind:'breedSnail',parentEntity:this,snail:this.parentEntity});y+=40;if(this.parentEntity.name==='Unnamed'){ig.game.pool.useObject('trigger',{pos:{x:x,y:y},kind:'nameSnail',parentEntity:this,snail:this.parentEntity});}
var snail=this.parentEntity;this.speed=snail.speed;this.endurance=snail.endurance;this.weight=snail.weight;this.mating=snail.mating;this.id=snail.id;this.stag=snail.stag;this.doe=snail.doe;},update:function(){if(this.inUse){this.parent();}},draw:function(){if(this.inUse){var snail=this.parentEntity;var x=this.pos.x;var y=this.pos.y;var lineIncrement=this.gui.headingsLineIncrement;this.ctx.font=this.gui.headingsFont;this.ctx.fillStyle=this.gui.headingsColor
this.ctx.fillText(snail.name,x,y);y+=lineIncrement;lineIncrement=this.gui.maintextLineIncrement;this.ctx.font=this.gui.maintextFont;this.ctx.fillStyle=this.gui.maintextColor;this.ctx.fillText('Speed: '+snail.speed,x,y);y+=lineIncrement;this.ctx.fillText('Endurance: '+snail.endurance,x,y);y+=lineIncrement;this.ctx.fillText('Weight: '+snail.weight,x,y);y+=lineIncrement;this.ctx.fillText('Mating: '+snail.mating,x,y);y+=lineIncrement;if(!snail.stag){this.ctx.fillText('ID: '+snail.id,x,y);}
else{this.ctx.fillText('ID: '+snail.id+' stag: '+snail.stag.id+' doe: '+snail.doe.id,x,y);}}},destroy:function(){if(this.inUse){ig.game.pool.freeObject(this);this.parentEntity.dispStats=false;this.kind=null;this.parentEntity=null;}},closeAllDependents:function(entity){var length=entity.dependentsArr.length;for(var i=0;i<length;i++){var dependentEntity=entity.dependentsArr[i];dependentEntity.destroy();}
entity.dependentsArr.length=0;}});ig.global.EntityRacelistGUI=ig.Entity.extend({type:ig.Entity.TYPE.NONE,size:{x:500,y:350},zIndex:2,parentEntity:null,dependentsArr:[],racesDisplayedArr:[],racesListedCount:0,openRace:null,openRaceEntrantsArr:[],listLimit:10,init:function(x,y,settings){this.parent(x,y,settings);this.ctx=ig.game.ctx;this.initialize();},initialize:function(){ig.game.raceListGui=this;this.openRaceEntrantsArr.length=0;this.size.x=ig.game.gui.menuPanel2Size.x;this.size.y=ig.game.gui.menuPanel2Size.y;this.pos.x=ig.game.gui.menuPanel2Pos.x;this.pos.y=ig.game.gui.menuPanel2Pos.y;if(this.openRace!==null){console.log('openRace is not null '+this.openRace);this.openRaceDetails(this.openRace._id);}
ig.game.pool.useObject('trigger',{kind:'downArrow',pos:{x:this.pos.x+this.size.x,y:this.pos.y+this.size.y-39},parentEntity:this});ig.game.pool.useObject('trigger',{kind:'upArrow',pos:{x:this.pos.x+this.size.x,y:this.pos.y+55},parentEntity:this});var parentTrigger=ig.game.controller.findTriggerByKind('racesButton');ig.game.pool.useObject('trigger',{kind:'createRace',parentEntity:this});this.parentEntity=parentTrigger;if(this.parentEntity){this.parentEntity.dependentsArr.push(this);}
var x=ig.game.gui.menuPanel2Pos.x;var y=ig.game.gui.menuPanel2Pos.y+55;for(var i=0;i<this.listLimit;i++){var race=ig.game.controller.raceListArr[i];if(race){ig.game.pool.useObject('trigger',{kind:'singleRace',parentEntity:this,temp:{raceID:race._id,raceName:race.name,raceFinished:race.finished,countDown:false,entrantsArr:race.entrantsArr,reqEntrants:race.reqEntrants},pos:{x:x,y:y}});y+=30;}}
this.inUse=true;},update:function(){if(this.inUse){this.parent();}},draw:function(){if(this.inUse){var x=ig.game.gui.menuPanel2Pos.x+3;var y=ig.game.gui.menuPanel2Pos.y+3;var lineIncrement=ig.game.gui.headingsLineIncrement;this.ctx.font=ig.game.gui.headingsFont;this.ctx.fillStyle=ig.game.gui.headingsColor;this.ctx.fillText('Races',x,y);if(this.openRace!==null){this.drawRaceDetails();}}},drawRaceDetails:function(){var x=this.pos.x+this.size.x+60;var y=this.pos.y;var lineIncrement=ig.game.gui.headingsLineIncrement;this.ctx.font=ig.game.gui.headingsFont;this.ctx.fillStyle=ig.game.gui.headingsColor;this.ctx.fillText(this.openRace.name,x,y);y+=lineIncrement;lineIncrement=ig.game.gui.maintextLineIncrement;this.ctx.font=ig.game.gui.maintextFont;this.ctx.fillStyle=ig.game.gui.maintextColor;this.ctx.fillText('Entrants: '+this.openRace.entrantsArr.length,x,y);},destroy:function(){if(this.inUse){ig.game.raceListGui=null;this.kill();}},closeAllDependents:function(entity){var length=entity.dependentsArr.length;for(var i=0;i<length;i++){var dependentEntity=entity.dependentsArr[i];dependentEntity.destroy();}
entity.dependentsArr.length=0;},openRaceDetails:function(id,pullEntrants){this.openRaceEntrantsArr.length=0;console.log('opening race ID: '+id);for(var i=0;i<ig.game.controller.raceListArr.length;i++){var race=ig.game.controller.raceListArr[i];if(race._id===id){this.openRace=race;break;}}
var x=this.pos.x+this.size.x+60;var y=this.pos.y+85;for(var i=0;i<this.openRace.reqEntrants;i++){ig.game.pool.useObject('trigger',{kind:'raceSlot',parentEntity:this,temp:{raceEntrantsArr:race.entrantsArr,raceID:race._id},pos:{x:x,y:y}});y+=65;}
if(pullEntrants){ig.game.impactSocket.refreshRaceSlots();}},refreshRaceEntrants:function(snail){var alreadyDisplayed=ig.game.controller.inArray(this.openRaceEntrantsArr,snail);if(!alreadyDisplayed){this.openRaceEntrantsArr.push(snail);var allRaceSlots=ig.game.controller.findTriggerByKind('raceSlot',true);for(var i=0;i<allRaceSlots.length;i++){var slot=allRaceSlots[i];if(!slot.temp.slotOccupied){slot.assignSnail(snail);console.log('assigning');break;}}}
console.log('open race entrants arr length: '+this.openRaceEntrantsArr.length);if(!this.openRace.finished&&this.openRaceEntrantsArr.length>=this.openRace.reqEntrants){ig.game.impactSocket.runRace(this.openRace,this.openRaceEntrantsArr);}},closeRaceDetails:function(){this.openRace=null;this.openRaceEntrantsArr.length=0;},scrollDown:function(){var race=ig.game.controller.raceListArr[this.racesListedCount];if(race){this.racesDisplayedArr[0].destroy();this.racesDisplayedArr.splice(0,1);for(var i=0;i<this.racesDisplayedArr.length;i++){var prevRace=this.racesDisplayedArr[i];prevRace.pos.y-=30;}
var x=ig.game.gui.menuPanel2Pos.x;var y=ig.game.gui.menuPanel2Pos.y+55+(this.racesDisplayedArr.length*30);ig.game.pool.useObject('trigger',{kind:'singleRace',parentEntity:this,temp:{raceID:race._id,raceName:race.name,raceFinished:race.finished,countDown:false,entrantsArr:race.entrantsArr,reqEntrants:race.reqEntrants},pos:{x:x,y:y}});}},scrollUp:function(){var race=ig.game.controller.raceListArr[this.racesListedCount-this.listLimit-1];if(race){var lastDisplayedRace=this.racesDisplayedArr[this.racesDisplayedArr.length-1];lastDisplayedRace.destroy();this.racesDisplayedArr.pop();if(race){for(var i=0;i<this.racesDisplayedArr.length;i++){var prevRace=this.racesDisplayedArr[i];prevRace.pos.y+=30;}
var x=ig.game.gui.menuPanel2Pos.x;var y=ig.game.gui.menuPanel2Pos.y+55;ig.game.pool.useObject('trigger',{kind:'singleRace',parentEntity:this,temp:{raceID:race._id,raceName:race.name,raceFinished:race.finished,countDown:true,entrantsArr:race.entrantsArr,reqEntrants:race.reqEntrants},pos:{x:x,y:y}});}}},});});

// lib/game/entities/trigger.js
ig.baked=true;ig.module('game.entities.trigger').requires('impact.entity').defines(function(){"use strict";ig.global.EntityTrigger=ig.Entity.extend({size:{x:100,y:28},offset:{x:0,y:0},maxVel:{x:0,y:0},kind:null,parentEntity:null,zIndex:200,alpha:0.6,active:true,clickable:true,cursorFade:true,_wmScalable:true,_wmDrawBox:true,_wmBoxColor:'#ffffff',inUse:false,textBg:'#25a20c',dependentsArr:[],temp:{},type:ig.Entity.TYPE.B,arrowAnimSheet:new ig.AnimationSheet('media/ui/arrow.png',50,50),mainMenuAnimSheet:new ig.AnimationSheet('media/ui/main-menu/raceFlag.png',100,133),snailAnimSheet:new ig.AnimationSheet('media/sprites/snail-template.png',150,117),init:function(x,y,settings){ig.game.pool.addToPool(this,ig.game.pool.allTriggersArr);this.anims.arrow=new ig.Animation(this.arrowAnimSheet,1,[0],false);this.anims.raceFlag=new ig.Animation(this.mainMenuAnimSheet,1,[0],false);this.anims.snail=new ig.Animation(this.snailAnimSheet,1,[0],false);this.parent(x,y,settings);this.ctx=ig.game.ctx;this.panelButtonPos={x:10,y:ig.system.height-35};if(!ig.global.wm){ig.game.sortEntitiesDeferred();}},initialize:function(){if(this.parentEntity){this.parentEntity.dependentsArr.push(this);}
switch(this.kind){case'breedSnail':this.size.x=200;this.pos.x=this.panelButtonPos.x;this.pos.y=this.panelButtonPos.y;break;case'nameSnail':this.size.x=200;this.pos.x=this.panelButtonPos.x+this.size.x+5;this.pos.y=this.panelButtonPos.y;break;case'startButton':this.pos.x-=39;this.pos.y-=3;this.size.x=78;this.size.y=45;break;case'racesButton':this.pos.x=ig.system.width-this.size.x-10;this.pos.y=10;this.size.x=100;this.size.y=133;this.currentAnim=this.anims.raceFlag;break;case'createRace':this.pos.x=ig.game.gui.menuPanel2Pos.x;this.pos.y=this.panelButtonPos.y;this.size.x=200;break;case'singleRace':this.size.x=200;this.size.y=28;if(this.temp.countDown===true){this.parentEntity.racesListedCount--;this.parentEntity.racesDisplayedArr.unshift(this);}
else{this.parentEntity.racesListedCount++;this.parentEntity.racesDisplayedArr.push(this);}
break;case'raceSlot':this.size.x=250;this.size.y=60;break;case'downArrow':this.size.x=50;this.size.y=50;this.currentAnim=this.anims.arrow;this.currentAnim.flip.y=true;break;case'upArrow':this.size.x=50;this.size.y=50;this.currentAnim=this.anims.arrow;break;}},clicked:function(){if(this.inUse){switch(this.kind){case'breedSnail':if(!this.snail.inBreedingJar){this.snail.inBreedingJar=true;ig.game.breedingJar.addSnail(this.snail);}
else{this.snail.inBreedingJar=false;ig.game.breedingJar.removeSnail(this.snail);}
break;case'nameSnail':ig.game.controller.toggleNamePrompt(this.snail);break;case'startButton':ig.game.loadLevel(LevelMain);break;case'racesButton':if(ig.game.gui.dispMenuPanel2!=='racelist'){ig.game.gui.dispMenuPanel2='racelist';ig.game.impactSocket.loadRacelist(function(races){ig.game.gui.spawnRacelist(races);});}
else{ig.game.gui.dispMenuPanel2=null;var allTriggers=ig.game.getEntitiesByType(EntityTrigger);for(var i=0;i<allTriggers.length;i++){if(allTriggers[i].kind==='createRace'){console.log('pre dest create race kind...');}}
ig.game.gui.closeAllDependents(this);var allTriggers=ig.game.getEntitiesByType(EntityTrigger);for(var i=0;i<allTriggers.length;i++){if(allTriggers[i].kind==='createRace'){console.log('post dest create race kind...');}}}
break;case'createRace':ig.game.controller.toggleRaceCreatePrompt();break;case'downArrow':this.parentEntity.scrollDown();break;case'upArrow':this.parentEntity.scrollUp();break;case'singleRace':if(this.parentEntity.openRace&&this.parentEntity.openRace._id===this.temp.raceID){ig.game.gui.closeSomeDependents('raceSlot',this.parentEntity);this.parentEntity.closeRaceDetails();}
else{console.log('toggling open race from trigger');ig.game.gui.closeSomeDependents('raceSlot',this.parentEntity);this.parentEntity.openRaceDetails(this.temp.raceID,true);}
break;}}},update:function(){if(this.inUse){if(!this.touches(ig.game.pointer)){if(this.textBg!=='#25a20c'){this.textBg='#25a20c';}}
this.parent();}},draw:function(){if(this.inUse){if(this.currentAnim===null||this.kind==='raceSlot'){if(this.kind==='singleRace'&&this.temp.raceFinished===true){this.ctx.fillStyle='#ff0000';}
else{this.ctx.fillStyle=this.textBg;}
this.ctx.fillRect(this.pos.x,this.pos.y,this.size.x,this.size.y);this.ctx.fillStyle='#ffffff';}
else{this.parent();}
switch(this.kind){case'breedSnail':var x=this.pos.x+3;var y=this.pos.y+3;this.ctx.font='15pt Arial';this.ctx.textAlign='left';if(!this.snail.inBreedingJar){this.ctx.fillText('Send to Breeding Jar',x,y);}
else{this.ctx.fillText('Remove from Breeding Jar',x,y);}
break;case'nameSnail':var x=this.pos.x+3;var y=this.pos.y+3;this.ctx.font='15pt Arial';this.ctx.textAlign='left';this.ctx.fillText('Name Snail',x,y);break;case'startButton':var x=ig.system.width/2;var y=ig.system.height/2;this.ctx.font='25pt Arial';this.ctx.textAlign='center';this.ctx.fillText('Play!',x,y);break;case'createRace':var x=this.pos.x+3;var y=this.pos.y+3;this.ctx.font='15pt Arial';this.ctx.textAlign='left';this.ctx.fillText('Create Race',x,y);break;case'singleRace':var x=this.pos.x+3;var y=this.pos.y+3;this.ctx.font='15pt Arial';this.ctx.textAlign='left';this.ctx.fillText(this.temp.raceName,x,y);this.ctx.save();x=this.pos.x+this.size.x-5;this.ctx.textAlign='right';this.ctx.fillText(this.temp.entrantsArr.length+'/'+this.temp.reqEntrants,x,y);this.ctx.restore();break;case'raceSlot':if(!this.temp.slotOccupied){var x=this.pos.x+3;var y=this.pos.y+3;this.ctx.fillStyle='#cccccc';this.ctx.font='15pt Arial';this.ctx.fillText('Drag snail here to enter!',x,y);}
else{this.ctx.save();this.ctx.strokeStyle='black';this.ctx.lineWidth=5;this.drawShell();this.drawEyes();this.drawPattern();this.ctx.save();this.ctx.translate(ig.system.getDrawPos(this.pos.x-this.offset.x-ig.game.screen.x),ig.system.getDrawPos(this.pos.y-this.offset.y-ig.game.screen.y));this.ctx.scale(this.temp.scale,this.temp.scale);this.currentAnim.draw(0,0);this.ctx.restore();this.ctx.restore();this.ctx.font='15pt Arial';this.ctx.fillStyle='#cccccc';var x=this.pos.x+100;var y=this.pos.y+1;this.ctx.fillText(this.temp.occupyingSnail.name,x,y);y+=20;this.ctx.fillText('Owner: '+this.temp.occupyingSnail.owner,x,y);y+=20;if(ig.game.raceListGui.openRace.finished){this.ctx.fillText('Finished in Place: '+this.temp.finishPos,x,y);}}
break;}}},assignSnail:function(snail){this.temp.scale=0.5;this.temp.shellRadius=56;this.temp.occupyingSnail=snail;this.temp.slotOccupied=true;this.temp.occupyingSnail.owner=snail.ownerUsername;this.currentAnim=this.anims.snail;if(ig.game.raceListGui.openRace.finished){for(var i=0;i<ig.game.raceListGui.openRace.resultsArr.length;i++){var raceResult=ig.game.raceListGui.openRace.resultsArr[i];if(raceResult===this.temp.occupyingSnail._id){this.temp.finishPos=i+1;}}}},drawShell:function(){var yPos=this.pos.y+60*this.temp.scale;if(!this.flip){var xPos=this.pos.x+90*this.temp.scale;}
else{var xPos=this.pos.x+60*this.temp.scale;}
this.ctx.fillStyle='rgba('+this.temp.occupyingSnail.shellColor.r+','+this.temp.occupyingSnail.shellColor.g+','+this.temp.occupyingSnail.shellColor.b+', 1)';this.ctx.beginPath();this.ctx.arc(xPos,yPos,this.temp.shellRadius*this.temp.scale,0,Math.PI*2,true);this.ctx.fill();},drawEyes:function(){var yPos=this.pos.y+50*this.temp.scale;if(!this.flip){var xPos=this.pos.x+5*this.temp.scale;}
else{var xPos=this.pos.x+115*this.temp.scale;}
this.ctx.fillStyle='rgba('+this.temp.occupyingSnail.eyeColor.r+','+this.temp.occupyingSnail.eyeColor.g+','+this.temp.occupyingSnail.eyeColor.b+', 1)';this.ctx.fillRect(xPos,yPos,10*this.temp.scale,15*this.temp.scale);xPos+=20*this.temp.scale;this.ctx.fillRect(xPos,yPos,10*this.temp.scale,15*this.temp.scale);},drawPattern:function(){var yPos=this.pos.y+60*this.temp.scale;if(!this.flip){var xPos=this.pos.x+50*this.temp.scale;}
else{var xPos=this.pos.x+20*this.temp.scale;}
var patternRadius=10;switch(this.temp.occupyingSnail.patternShape){case 1:for(var i=0;i<3;i++){switch(i){case 0:xPos+=35*this.temp.scale;yPos-=20*this.temp.scale;break;case 1:xPos-=15*this.temp.scale;yPos+=25*this.temp.scale;break;case 2:xPos+=30*this.temp.scale;break;}
this.ctx.beginPath();this.ctx.arc(xPos,yPos,patternRadius*this.temp.scale,0,Math.PI*2,true);this.ctx.stroke();this.ctx.fill();}
break;case 2:patternRadius=20;yPos-=10*this.temp.scale;for(var i=0;i<3;i++){this.ctx.beginPath();this.ctx.rect(xPos,yPos,patternRadius*this.temp.scale,patternRadius*this.temp.scale);this.ctx.stroke();this.ctx.fill();xPos+=(patternRadius+10)*this.temp.scale;}
break;}},destroy:function(){if(this.inUse){ig.game.pool.freeObject(this);if(this.kind==='nameSnail'&&ig.game.controller.namePromptOpen===true){console.log('toggling from destroy');ig.game.controller.toggleNamePrompt();}
else if(this.kind==='raceSlot'){console.log('closing race slot');}
this.temp={};this.kind=null;this.parentEntity=null;this.currentAnim=null;this.pos={x:-100,y:-100};}},closeAllParent:function(){this.parentEntity.destroy();for(var i=0;i<ig.game.entities.length;i++){var entity=ig.game.entities[i];if(entity.parentEntity===this.parentEntity){entity.destroy();}}}});});

// lib/game/levels/main.js
ig.baked=true;ig.module('game.levels.main').requires('impact.image').defines(function(){LevelMain={"entities":[],"layer":[{"name":"background","width":5,"height":3,"linkWithCollision":false,"visible":true,"tilesetName":"media/jar-background.png","repeat":false,"preRender":true,"distance":"1","tilesize":256,"foreground":false,"data":[[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15]]}]};LevelMainResources=[new ig.Image('media/jar-background.png')];});

// lib/game/levels/title.js
ig.baked=true;ig.module('game.levels.title').requires('impact.image').defines(function(){LevelTitle={"entities":[],"layer":[{"name":"bg","width":5,"height":3,"linkWithCollision":false,"visible":1,"tilesetName":"media/ui/title.png","repeat":false,"preRender":true,"distance":"1","tilesize":256,"foreground":false,"data":[[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15]]}]};LevelTitleResources=[new ig.Image('media/ui/title.png')];});

// lib/game/misc/controller.js
ig.baked=true;ig.module('game.misc.controller').requires('impact.impact').defines(function(){"use strict";ig.Controller=ig.Class.extend({score:0,difficulty:1,activeJars:0,raceListArr:[],accessPromptOpen:true,createRacePromptOpen:false,namePromptOpen:false,snailToName:null,grow:function(entity,growthpoints){entity.scale=entity.scale+(entity.scale*growthpoints);},toggleAccessPrompt:function(){if(!this.accessPromptOpen){console.log('opening');document.getElementById("accessPrompt").style.display='block';}
else{console.log('closing');document.getElementById("accessPrompt").style.display='none';this.accessPromptOpen=false;}},toggleRaceCreatePrompt:function(){console.log('toggling! '+this.createRacePromptOpen);if(!this.createRacePromptOpen){this.createRacePromptOpen=true;document.getElementById("createracePrompt").style.display='block';}
else{this.createRacePromptOpen=false;document.getElementById("createracePrompt").style.display='none';}},toggleNamePrompt:function(snail){if(!this.namePromptOpen){console.log('opening');document.getElementById("namePrompt").style.display='block';this.snailToName=snail;this.namePromptOpen=true;}
else{console.log('closing');document.getElementById("namePrompt").style.display='none';this.snailToName=null;this.namePromptOpen=false;}},setSnailName:function(){if(this.snailToName){var name=document.getElementById("name").value;if(name){this.snailToName.name=name;console.log('snailtoname id: '+this.snailToName.snailID);ig.game.impactSocket.updateSnail(this.snailToName.snailID,'name',name);for(var i=0;i<ig.game.pool.allTriggersArr.length;i++){var trigger=ig.game.pool.allTriggersArr[i];if(trigger.kind==='nameSnail'){trigger.destroy();}}
document.getElementById("name").value="";}
else{this.toggleNamePrompt();}}
else{console.log('toggling from setSnailName');this.toggleNamePrompt();}},findTriggerByKind:function(kind,findAll){var allTriggers=ig.game.getEntitiesByType(EntityTrigger);var allTriggersOfKindArr=[];for(var i=0;i<allTriggers.length;i++){var trigger=allTriggers[i];if(trigger.kind===kind){if(!findAll){return trigger;}
else{allTriggersOfKindArr.push(trigger);}}}
if(findAll===true){return allTriggersOfKindArr;}},randomFromTo:function(from,to){return Math.floor(Math.random()*(to-from+1)+from);},decimalRandomFromTo:function(from,to){return Math.random()*(to-from+1)+from;},getHighestNumber:function(object,getKey){var largest={key:null,val:null};for(var i in object){if(object[i]>largest.val){largest.key=i;largest.val=object[i];}}
if(getKey){return largest.key;}
else{return largest.val;}},inArray:function(arr,obj){return(arr.indexOf(obj)!=-1);},shuffleArray:function(array){for(var i=array.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp;}
return array;},removeFromArray:function(object,array){var index=array.indexOf(object);array.splice(index,1);},calcPercentage:function(value1,value2){return 100*value1/value2;},calcTargetPercentageValue:function(targetpercent,value1){return targetpercent*value1/100;},pickRandomColor:function(rFrom,rTo,gFrom,gTo,bFrom,bTo){var r=this.randomFromTo(rFrom,rTo);var g=this.randomFromTo(gFrom,gTo);var b=this.randomFromTo(bFrom,bTo);return{r:r,g:g,b:b};},transitionColor:function(currentColor,targetColor){if(currentColor>targetColor){currentColor-=5;}
else if(currentColor<targetColor){currentColor+=5;}
return currentColor;},pause:function(){if(!ig.game.paused){ig.music.pause();}
else{ig.music.play();}
ig.Timer.timeScale=(ig.Timer.timeScale===0?1:0);this._paused=ig.Timer.timeScale===0;ig.game.paused=!(ig.game.paused);},checkDetection:function(posX,posY,sizeX){var primaryEye=ig.game.primaryEye;var detected=false;var dist=Math.sqrt(Math.pow(primaryEye.pointOfSight.x-(posX+sizeX/2),2)+Math.pow(primaryEye.pointOfSight.y-(posY+sizeX/2),2));if(dist<(primaryEye.sightArea+sizeX/2))detected=true;return detected;}});});

// lib/game/misc/pool.js
ig.baked=true;ig.module('game.misc.pool').requires('impact.impact').defines(function(){"use strict";ig.Pool=ig.Class.extend({allSnailsArr:[],allTriggersArr:[],allJarsArr:[],allSnailStatsGUI:[],addToPool:function(entity,arr){arr.unshift(entity);},useObject:function(object,attributes){var poolArr=null;var entityType=null;var entity=null;switch(object){case'snail':poolArr=this.allSnailsArr;entityType='EntitySnail';break;case'trigger':poolArr=this.allTriggersArr;entityType='EntityTrigger';break;case'jar':poolArr=this.allJarsArr;entityType='EntityJar';break;case'snailstatsgui':poolArr=this.allSnailStatsGUI;entityType='EntitySnailStatsGUI';break;}
entity=poolArr[0];if(entity.inUse===false){for(var propt in attributes){entity[propt]=attributes[propt];}
entity.inUse=true;entity.initialize();this.moveArrElement(poolArr,0,poolArr.length-1);}
else{var foundAvailableEntity=false;for(var i=poolArr.length-1;i>0;i--){entity=poolArr[i];if(!entity.inUse){this.moveArrElement(poolArr,i,0);foundAvailableEntity=true;}}
if(!foundAvailableEntity){console.log('creating new entity');ig.game.spawnEntity(entityType,0,0);}
this.useObject(object,attributes);}},freeObject:function(entity){if(entity.inUse){entity.inUse=false;ig.game.gui.closeAllDependents(entity);}},freeAllObjects:function(object){var poolArr;switch(object){case'snail':poolArr=this.allSnailsArr;break;case'trigger':poolArr=this.allTriggersArr;break;case'jar':poolArr=this.allJarsArr;break;case'snailstatsgui':poolArr=this.allSnailStatsGUI;break;}
for(var i=0;i<poolArr.length;i++){var entity=poolArr[i];if(entity.inUse){entity.destroy();}}},removeAllObjects:function(object){var poolArr;switch(object){case'snail':poolArr=this.allSnailsArr;break;case'trigger':poolArr=this.allTriggersArr;break;case'jar':poolArr=this.allJarsArr;break;}
poolArr.length=0;},moveArrElement:function(array,old_index,new_index){if(new_index>=array.length){var k=new_index-array.length;while((k--)+1){array.push(undefined);}}
array.splice(new_index,0,array.splice(old_index,1)[0]);return array;}});});

// lib/game/misc/impactsocket.js
ig.baked=true;ig.module('game.misc.impactsocket').requires('impact.impact').defines(function(){ig.ImpactSocket=ig.Class.extend({init:function(port){this.socket=io.connect('http://gentle-cliffs-3423.herokuapp.com:'+port,{'reconnect':true,'reconnection delay':500,'max reconnection attempts':10});this.socket.emit('start');this.socket.on('connect',function(){console.log('Client has connected to the server!');});this.socket.on('news',function(data){console.log(data);this.socket.emit('my other event',{my:'data'});});this.socket.on('setsessionsnails',function(data){ig.game.sessionSnails=data;console.log('snails length: '+ig.game.sessionSnails.length);if(ig.game.sessionSnails.length>0){ig.game.loadLevel(LevelMain);}});this.socket.on('loadracingsnail',function(data){var snail=data;console.log('load racing snail: '+data._id);if(ig.game.raceListGui.openRace!==null){console.log('refreshing race entrants');ig.game.raceListGui.refreshRaceEntrants(snail);}});this.socket.on('announced',function(data){ig.game.write(data.text,{x:ig.system.width/4,y:ig.system.height/4});});},send:function(name,data){console.log('send called');this.socket.emit("impactsocketbroadcast",{name:name,data:data});},registerUser:function(){console.log('register user');var data={username:null,password:null};data.username=document.getElementById("username").value;data.password=document.getElementById("password").value;if(data.username&&data.password){this.socket.emit("registeruser",data);}
else{console.log('Username and/or password blank');}},loginUser:function(){var data={username:null,password:null};data.username=document.getElementById("username").value;data.password=document.getElementById("password").value;console.log('loginUser: '+data.username+' '+data.password);if(data.username&&data.password){this.socket.emit("loginuser",data,function(err,user){if(err){return console.error(err);}
if(user!==null){console.log('setUser: '+user.username);ig.game.sessionUsername=data.username;ig.game.sessionUserID=user.userID;ig.game.controller.toggleAccessPrompt();ig.game.controller.activeJars=user.activeJars;}
else{console.log('account not found');}});}},saveSnail:function(snail){var data={};data.ownerID=ig.game.sessionUserID;data.ownerUsername=ig.game.sessionUsername;data.inDb=true;data.name=snail.name;data.size={x:snail.size.x,y:snail.size.y};data.age=snail.age;data.adult=snail.adult;data.scale=snail.scale;data.maxScale=snail.maxScale;data.shellColor={r:snail.shellColor.r,g:snail.shellColor.g,b:snail.shellColor.b};data.eyeColor={r:snail.eyeColor.r,g:snail.eyeColor.g,b:snail.eyeColor.b};data.patternColor={r:snail.patternColor.r,g:snail.patternColor.g,b:snail.patternColor.b};data.patternShape=snail.patternShape;data.speed=snail.speed;data.currSpeed=snail.currSpeed;data.endurance=snail.endurance;data.currEndurance=snail.currEndurance;data.weight=snail.weight;data.health=snail.health;data.genes={shellColor:{allele1:snail.genes.shellColor.allele1,allele2:snail.genes.shellColor.allele2},eyeColor:{allele1:snail.genes.eyeColor.allele1,allele2:snail.genes.eyeColor.allele2},patternColor:{allele1:snail.genes.patternColor.allele1,allele2:snail.genes.patternColor.allele2},patternShape:{allele1:snail.genes.patternShape.allele1,allele2:snail.genes.patternShape.allele2}};data.inJar=snail.inJar;data.parentJar=snail.parentJar.jarID;data.orientation=snail.orientation;data.arousalDelay=snail.arousalDelay;data.inBreedingJar=snail.inBreedingJar;data.mating=snail.mating;if(snail.mate){data.mateID=snail.mate.snailID;}
data.stagID=null;data.doeID=null;if(snail.stag){stagID=snail.stag.stagID;snail.doeID=snail.doe.doeID;}
console.log('saving snail');this.socket.emit("savesnail",data,function(err,snailid){if(err){return console.error(err);}
snail.snailID=snailid;console.log('snail ID set: '+snailid);});},updateSnail:function(snailID,attrToUpdate,newAttr){console.log('updating');var data={snailID:snailID,attrToUpdate:attrToUpdate,newAttr:newAttr};console.log('data.snailID: '+data.snailID);this.socket.emit("updatesnail",data);},updateRace:function(raceID,attrToUpdate,newAttr){console.log('updating');var data={raceID:raceID,attrToUpdate:attrToUpdate,newAttr:newAttr};console.log('data.raceID: '+data.raceID);this.socket.emit("updaterace",data);ig.game.impactSocket.loadRacelist(function(races){ig.game.gui.spawnRacelist(races);ig.game.impactSocket.refreshRaceSlots();});},updateUser:function(userID,attrToUpdate,newAttr){console.log('updating');var data={userID:userID,attrToUpdate:attrToUpdate,newAttr:newAttr};console.log('data.userID: '+data.userID);this.socket.emit("updateuser",data);},announce:function(data){this.socket.emit("announce",data);},createRace:function(){console.log('create race');var data={racename:null,reqentrants:null};data.racename=document.getElementById("racename").value;data.reqentrants=document.getElementById("reqentrants").value;data.distance=document.getElementById("distance").value;this.socket.emit("createrace",data);ig.game.controller.toggleRaceCreatePrompt();this.loadRacelist(function(races){ig.game.gui.spawnRacelist(races);});},loadRacelist:function(cb){var finished=null;this.socket.emit("loadracelist",finished,function(err,races){if(err){return console.error(err);}
if(races!==null){ig.game.controller.raceListArr=races;console.log('racelisarr: '+ig.game.controller.raceListArr.length);cb(ig.game.controller.raceListArr);}
else{console.log('races not found');}});},refreshRaceSlots:function(snail){var race=ig.game.raceListGui.openRace;var data={};data.raceID=race._id;if(snail){data.snailID=snail.snailID;}
this.socket.emit("updateraceentries",data,function(err,enteredSnailsArr){if(err){console.log('error: '+err);}
else{console.log('done! '+enteredSnailsArr[0]);}});},runRace:function(race,entrants){var data={};data.race=race;data.entrants=entrants;console.log('running race');this.socket.emit("runrace",data,function(err,raceResultsArr){if(err){console.log('race results error: '+err);}
else{console.log('raceResultsArr: '+raceResultsArr);ig.game.impactSocket.updateRace(race._id,'resultsArr',raceResultsArr);ig.game.impactSocket.updateRace(race._id,'finished',true);}});}});});

// lib/game/main.js
ig.baked=true;ig.module('game.main').requires('impact.game','impact.font','game.entities.pointer','game.entities.snail','game.entities.breedingjar','game.entities.jar','game.entities.gui','game.entities.trigger','game.levels.main','game.levels.title','game.misc.controller','game.misc.pool','game.misc.impactsocket').defines(function(){Snails=ig.Game.extend({font:new ig.Font('media/04b03.font.png'),controller:new ig.Controller(),pool:new ig.Pool(),clearColor:'white',init:function(){this.ctx=ig.system.context;this.ctx.textBaseline='top';this.sessionSnails=[];ig.input.bind(ig.KEY.MOUSE1,'mouse1');this.impactSocket=new ig.ImpactSocket(80);this.loadLevel(LevelTitle);},loadLevel:function(data){this.currentLevel=data;this.parent(data);this.pool.removeAllObjects('trigger');this.spawnEntity(EntityPointer,0,0);this.spawnEntity(EntityGui,0,0);for(var n=0;n<1;n++){this.spawnEntity(EntityTrigger,0,0,{inUse:false});}
switch(this.currentLevel){case LevelTitle:var x=ig.system.width/2;var y=ig.system.height/2;this.pool.useObject('trigger',{pos:{x:x,y:y},kind:'startButton'});break;case LevelMain:this.spawnEntity(EntityBreedingJar,ig.system.width-170,ig.system.height-270,{inUse:true});this.spawnEntity(EntityJar,-1000,-1000,{inUse:false});ig.game.gui.loadElements(this.currentLevel);for(var i=0;i<10;i++){this.spawnEntity(EntitySnail,-200,-200,{inUse:false});}
var x=10;var y=10;if(this.controller.activeJars>0){var jarsToLoad=this.controller.activeJars;console.log('jarstoload: '+jarsToLoad);for(var i=1;i<=jarsToLoad;i++){console.log('loading jar');this.pool.useObject('jar',{pos:{x:x,y:y}});}}
else{console.log('new jar');this.controller.activeJars++;this.impactSocket.updateUser(this.sessionUserID,'activeJars',this.controller.activeJars);this.pool.useObject('jar',{pos:{x:x,y:y}});}
if(ig.game.sessionSnails.length===0){console.log('no snails loaded');for(var n=0;n<4;n++){this.pool.useObject('snail',{visible:false,starterSnail:true});}}
else{console.log('loading snails');for(var i=0;i<this.sessionSnails.length;i++){var snail=this.sessionSnails[i];var attributes={pos:{x:x,y:y},visible:false,starterSnail:false,loadedSnail:true,ownerID:this.sessionUserID,ownerUsername:snail.ownerUsername,snailID:snail._id,inDb:true,name:snail.name,adult:snail.adult,size:{x:snail.size.x,y:snail.size.y},age:snail.age,scale:snail.scale,maxScale:snail.maxScale,shellColor:{r:snail.shellColor.r,g:snail.shellColor.g,b:snail.shellColor.b},eyeColor:{r:snail.eyeColor.r,g:snail.eyeColor.g,b:snail.eyeColor.b},patternColor:{r:snail.patternColor.r,g:snail.patternColor.g,b:snail.patternColor.b},patternShape:snail.patternShape,speed:snail.speed,currSpeed:snail.currSpeed,endurance:snail.endurance,currEndurance:snail.currEndurance,weight:snail.weight,health:snail.health,genes:{shellColor:{allele1:snail.genes.shellColor.allele1,allele2:snail.genes.shellColor.allele2},eyeColor:{allele1:snail.genes.eyeColor.allele1,allele2:snail.genes.eyeColor.allele2},patternColor:{allele1:snail.genes.patternColor.allele1,allele2:snail.genes.patternColor.allele2},patternShape:{allele1:snail.genes.patternShape.allele1,allele2:snail.genes.patternShape.allele2}},inJar:snail.inJar,orientation:snail.orientation,inBreedingJar:snail.inBreedingJar,mating:snail.mating,mateID:snail.mateID,arousalDelay:snail.arousalDelay,stagID:null,doeID:null}
this.pool.useObject('snail',attributes);}}
break;}},update:function(){this.parent();},draw:function(){this.parent();}});ig.main('#canvas',Snails,60,1280,768,1);});